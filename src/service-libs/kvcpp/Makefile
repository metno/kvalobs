PROGRAM_NAME= kvcpp
TARGET= lib$(PROGRAM_NAME).a
TEST_PROGRAM_NAME= test$(PROGRAM_NAME)

TOP= ../../../

MAIN:=
SRC:= 	src/KvApp.cc \
	src/kvDataSubscribeInfoHelper.cc \
	src/kveventinterface.cc \
	src/corba/kvHintSubscriberImpl.cc \
	src/kvWhat.cc \
	src/WhichDataHelper.cc \
	src/corba/kvDataNotifySubscriberImpl.cc \
	src/corba/kvDataSubscriberImpl.cc \
	src/kvevents.cc \
	src/KvObsData.cc \
	src/RejectdecodeIterator.cc \
	src/corba/CorbaGetFunction.cc \
	src/corba/CorbaKvApp.cc \
	src/corba/kvCorbaThread.cc
TESTSRC:=
QSRC:= src/corba/qt/QtCorbaKvApp.cc
UI:=

include $(TOP)/conf/make.$(OSTYPE)

INCLUDE:= -Iinclude/ \
  -I$(TOP)/include \
  -I$(TOP)/include/kvskel \
  -I$(PUTOOLS)/include \
  -I$(PUTOOLS)/include/puTools/ \
  $(BOOSTINCLUDE) $(OMNIINCLUDE) `pkg-config --cflags qt-mt`
#	 `pkg-config --cflags qt-mt omniORB4 omniDynamic4 libxml++-1.0`

# LIB:=	-L$(TOP)/lib -lkvcpp -ldecodeutility -lkvalobs -lkvdb -lfileutil -ldl -ldnmithread \
# 		-lcorbahelper -lcorba_skel \
# 		-lmiutil -lmiconfparser -lmilog \
# 		$(BOOSTLIB) -lboost_thread -lboost_regex \
# 		-lldap `pkg-config --libs qt-mt omniORB4 omniDynamic4 libxml++-1.0`

CXXFLAGS+= -Wall
DEFINES+=
CXXLDFLAGS+=


#include src/make.mk
#include test/make.mk


# Qt:
UI_IMPL= $(UI:.ui=.cc)
UI_HEAD= $(UI:.ui=.h)
MOC_SRC= $(QSRC:.cc=.moc.cc) $(UI_IMPL:.cc=.moc.cc)

ALL_SRC= $(UI_IMPL) $(QSRC) $(MOC_SRC) $(SRC)
OBJ= $(SRC:.cc=.o)
QT_OBJ= $(ALL_SRC:.cc=.o)

# Test:
TESTOBJ= $(TESTSRC:.cc=.o)
TESTLIB= -lcppunit

ifndef PREFIX
       PREFIX=$(TOP)
endif

all:  install installqt

SED_SUBSTITUTION = sed s,PREFIX,`cd $(PREFIX); pwd`, | \
	sed s,PUTOOLS,$(PUTOOLS),

install: $(TARGET)
	mkdir -p $(PREFIX)/include/kvservice/$(PROGRAM_NAME)/corba/ $(PREFIX)/lib $(PREFIX)/lib/pkgconfig/
	cp $(TARGET) $(PREFIX)/lib
	cp -f include/*.h $(PREFIX)/include/kvservice/$(PROGRAM_NAME)
	cp -f include/corba/*.h $(PREFIX)/include/kvservice/$(PROGRAM_NAME)/corba/
	rm -f $(PREFIX)/lib/pkgconfig/$(PROGRAM_NAME).pc
	cat $(PROGRAM_NAME).pc | $(SED_SUBSTITUTION) >> $(PREFIX)/lib/pkgconfig/$(PROGRAM_NAME).pc

uninstall: uninstallqt
	rm -rf $(PREFIX)/lib/$(TARGET) \
    $(PREFIX)/include/kvservice/$(PROGRAM_NAME) \
    $(PREFIX)/lib/pkgconfig/$(PROGRAM_NAME).pc

QT_PROGRAM_NAME= kvQt
QT_TARGET= lib$(QT_PROGRAM_NAME).a

installqt: $(QT_TARGET)
	mkdir  -p $(PREFIX)/include/kvservice/$(PROGRAM_NAME)/corba/qt
	cp $(QT_TARGET) $(PREFIX)/lib
	cp -f include/corba/qt/*.h $(PREFIX)/include/kvservice/$(PROGRAM_NAME)/corba/qt/
	rm -f $(PREFIX)/lib/pkgconfig/$(QT_PROGRAM_NAME).pc
	cat $(QT_PROGRAM_NAME).pc | sed s,PREFIX,`cd $(PREFIX); pwd`, >> $(PREFIX)/lib/pkgconfig/$(QT_PROGRAM_NAME).pc


uninstallqt:


.cc.o:
	$(CXX) $(CXXFLAGS) $(DEFINES) $(INCLUDE) -o $@ -c $<

src/corba/qt/QtCorbaKvApp.moc.o: include/corba/qt/QtCorbaKvApp.h
	moc -o $@ $<

$(QT_TARGET): $(QT_OBJ) 
	ar r $(QT_TARGET) $(QT_OBJ)

# Qt specific:
%.moc.cc:	%.h
	moc -o $@ $<

%.h: %.ui
	uic -o$@ $<

%.ui.h:
	touch $@

%.cc: %.ui %.h %.ui.h
	uic -o$@ -impl $(notdir $*.h) $<

vpath %.h 	include
vpath %.cc 	src

$(PROGRAM_NAME): $(OBJ) $(MAIN:.cc=.o)
	$(CXX) -o $@ -Wall $(CXXLDFLAGS) $(OBJ) $(MAIN:.cc=.o) $(LIB)


$(TARGET): $(OBJ)
	ar r lib$(PROGRAM_NAME).a $(OBJ)


$(TEST_PROGRAM_NAME): $(OBJ) $(TESTOBJ)
	$(CXX) -o $@ -Wall $(CXXLDFLAGS) $(OBJ) $(TESTOBJ) $(LIB) $(TESTLIB)

$(LIB_NAME): $(OBJ)


test:  $(TEST_PROGRAM_NAME)
	@echo Running tests:; ./$(TEST_PROGRAM_NAME)


# Autogenerated dependencies:
%.d: %.cc $(UI_HEAD)
	@set -e; rm -f $@; \
	$(CXX) -MM -MQ $(basename $<).o $(CXXFLAGS) $(DEFINES) $(INCLUDE) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

DEPENDS_FILES= $(SRC:.cc=.d) $(MAIN:.cc=.d) $(QSRC:.cc=.d) $(UI_IMPL:.cc=.d) $(TESTSRC:.cc=.d) $(TESTMAIN:.cc=.d)

-include $(DEPENDS_FILES)

# Not allow qt tools to delete generated headers
#KEEP_UI_HEADERS:        $(UI_HEAD)


pretty:
	rm -f core core.*
	find . -name '*~' -type f -exec rm -f  {} \;
	find . -name '*.d.*' -type f -exec rm -f  {} \;

clean: pretty
	rm -f $(OBJ) $(MAIN:.cc=.o) $(TESTOBJ) $(UI_HEAD) $(UI_IMPL) $(MOC_SRC) $(DEPENDS_FILES)

veryclean: clean
	rm -f $(TARGET) $(TEST_PROGRAM_NAME)

.PHONY: all install uninstall pretty clean test KEEP_UI_HEADERS
