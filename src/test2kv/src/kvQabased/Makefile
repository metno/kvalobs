# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/kvQabased/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#ACLOCAL_AMFLAGS = -I m4


VPATH = /home/vegardb/kvoss/kvalobs/src/kvQabased
pkgdatadir = $(datadir)/kvalobs
pkgincludedir = $(includedir)/kvalobs
pkglibdir = $(libdir)/kvalobs
pkglibexecdir = $(libexecdir)/kvalobs
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = kvQabased$(EXEEXT)
DIST_COMMON = $(dist_bin_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/scripts/qabase.mk \
	$(srcdir)/src/corbalistener/qabase.mk \
	$(srcdir)/src/db/cache/qabase.mk $(srcdir)/src/db/qabase.mk \
	$(srcdir)/src/db/returntypes/qabase.mk $(srcdir)/src/qabase.mk \
	$(srcdir)/src/scriptcreate/qabase.mk \
	$(srcdir)/src/scriptrunner/language/perl/qabase.mk \
	$(srcdir)/src/scriptrunner/language/qabase.mk \
	$(srcdir)/src/scriptrunner/qabase.mk $(srcdir)/test/qabase.mk
#check_PROGRAMS = qabasetest$(EXEEXT)
subdir = src/kvQabased
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/googletest.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/model2kv.m4 \
	$(top_srcdir)/m4/omniORB4.m4 $(top_srcdir)/m4/perl.m4 \
	$(top_srcdir)/m4/postgresql.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = kvQabased-LogFileCreator.$(OBJEXT) \
	kvQabased-CheckRunner.$(OBJEXT) \
	kvQabased-Configuration.$(OBJEXT) \
	kvQabased-ScriptInput.$(OBJEXT) kvQabased-Script.$(OBJEXT) \
	kvQabased-RunResult.$(OBJEXT) \
	kvQabased-interpreterRegistration.$(OBJEXT) \
	kvQabased-Interpreter.$(OBJEXT) \
	kvQabased-kvPerlParser.$(OBJEXT) \
	kvQabased-PerlInterpreter.$(OBJEXT) \
	kvQabased-qabaseApp.$(OBJEXT) \
	kvQabased-QaWorkCommand.$(OBJEXT) \
	kvQabased-QaWorkThread.$(OBJEXT) \
	kvQabased-ConnectionHandler.$(OBJEXT) \
	kvQabased-corbaMain.$(OBJEXT) kvQabased-AdminImpl.$(OBJEXT) \
	kvQabased-qabaseInputImpl.$(OBJEXT) \
	kvQabased-KvalobsCheckScript.$(OBJEXT) \
	kvQabased-ScriptResultIdentifier.$(OBJEXT) \
	kvQabased-populateScript.$(OBJEXT) \
	kvQabased-DataStore.$(OBJEXT) \
	kvQabased-KvalobsDatabaseAccess.$(OBJEXT) \
	kvQabased-DelayedSaveDatabaseAccess.$(OBJEXT) \
	kvQabased-CachedDatabaseAccess.$(OBJEXT) \
	kvQabased-databaseResultFilter.$(OBJEXT) \
	kvQabased-CheckSignature.$(OBJEXT) \
	kvQabased-DataRequirement.$(OBJEXT) \
	kvQabased-kvCronString.$(OBJEXT)
am_kvQabased_OBJECTS = $(am__objects_1) kvQabased-main.$(OBJEXT)
kvQabased_OBJECTS = $(am_kvQabased_OBJECTS)
kvQabased_LDADD = $(LDADD)
am__qabasetest_SOURCES_DIST = src/Exception.h src/CheckRunner.h \
	src/LogFileCreator.cpp src/CheckRunner.cpp \
	src/Configuration.cpp src/Configuration.h src/LogFileCreator.h \
	src/scriptrunner/RunResult.h src/scriptrunner/ScriptInput.cpp \
	src/scriptrunner/Script.h src/scriptrunner/Script.cpp \
	src/scriptrunner/ScriptInput.h src/scriptrunner/RunResult.cpp \
	src/scriptrunner/language/interpreterRegistration.cpp \
	src/scriptrunner/language/Interpreter.h \
	src/scriptrunner/language/Interpreter.cpp \
	src/scriptrunner/language/interpreterRegistration.h \
	src/scriptrunner/language/perl/kvPerlParser.h \
	src/scriptrunner/language/perl/kvPerlParser.cc \
	src/scriptrunner/language/perl/PerlInterpreter.cpp \
	src/scriptrunner/language/perl/PerlInterpreter.h \
	src/corbalistener/QaWorkCommand.h \
	src/corbalistener/ConnectionHandler.h \
	src/corbalistener/qabaseApp.cpp \
	src/corbalistener/QaWorkCommand.cpp \
	src/corbalistener/qabaseApp.h src/corbalistener/AdminImpl.h \
	src/corbalistener/QaWorkThread.cpp \
	src/corbalistener/corbaMain.h \
	src/corbalistener/qabaseInputImpl.h \
	src/corbalistener/ConnectionHandler.cpp \
	src/corbalistener/corbaMain.cpp \
	src/corbalistener/AdminImpl.cpp \
	src/corbalistener/QaWorkThread.h \
	src/corbalistener/qabaseInputImpl.cpp \
	src/scriptcreate/KvalobsCheckScript.h \
	src/scriptcreate/DataStore.h \
	src/scriptcreate/KvalobsCheckScript.cpp \
	src/scriptcreate/ScriptResultIdentifier.cpp \
	src/scriptcreate/populateScript.h \
	src/scriptcreate/ScriptResultIdentifier.h \
	src/scriptcreate/populateScript.cpp \
	src/scriptcreate/DataStore.cpp \
	src/db/KvalobsDatabaseAccess.cpp \
	src/db/FilteredDatabaseAccess.h \
	src/db/DelayedSaveDatabaseAccess.cpp \
	src/db/databaseResultFilter.h src/db/DatabaseAccess.h \
	src/db/CachedDatabaseAccess.cpp src/db/CachedDatabaseAccess.h \
	src/db/KvalobsDatabaseAccess.h \
	src/db/DelayedSaveDatabaseAccess.h \
	src/db/databaseResultFilter.cpp src/db/cache/DataCache.h \
	src/db/returntypes/CheckSignature.h \
	src/db/returntypes/CheckSignature.cpp \
	src/db/returntypes/DataRequirement.h \
	src/db/returntypes/kvCronString.h \
	src/db/returntypes/DataRequirement.cpp \
	src/db/returntypes/kvCronString.cc \
	test/DelayedSaveDatabaseAccessTest.cpp \
	test/ScriptResultIdentifierTest.cpp \
	test/KvalobsCheckScriptTest.cpp test/test.cpp \
	test/DataRequirementTest.cpp test/CheckRunnerTest.cpp \
	test/FakeDatabaseAccess.cpp test/CheckSignatureTest.cpp \
	test/DataStoreTest.cpp test/FakeDatabaseAccess.h \
	test/kvCronStringTest.cpp test/databaseResultFilterTest.cpp \
	test/MockDatabaseAccess.h test/populateScriptTest.cpp
am__objects_2 = qabasetest-LogFileCreator.$(OBJEXT) \
	qabasetest-CheckRunner.$(OBJEXT) \
	qabasetest-Configuration.$(OBJEXT) \
	qabasetest-ScriptInput.$(OBJEXT) qabasetest-Script.$(OBJEXT) \
	qabasetest-RunResult.$(OBJEXT) \
	qabasetest-interpreterRegistration.$(OBJEXT) \
	qabasetest-Interpreter.$(OBJEXT) \
	qabasetest-kvPerlParser.$(OBJEXT) \
	qabasetest-PerlInterpreter.$(OBJEXT) \
	qabasetest-qabaseApp.$(OBJEXT) \
	qabasetest-QaWorkCommand.$(OBJEXT) \
	qabasetest-QaWorkThread.$(OBJEXT) \
	qabasetest-ConnectionHandler.$(OBJEXT) \
	qabasetest-corbaMain.$(OBJEXT) qabasetest-AdminImpl.$(OBJEXT) \
	qabasetest-qabaseInputImpl.$(OBJEXT) \
	qabasetest-KvalobsCheckScript.$(OBJEXT) \
	qabasetest-ScriptResultIdentifier.$(OBJEXT) \
	qabasetest-populateScript.$(OBJEXT) \
	qabasetest-DataStore.$(OBJEXT) \
	qabasetest-KvalobsDatabaseAccess.$(OBJEXT) \
	qabasetest-DelayedSaveDatabaseAccess.$(OBJEXT) \
	qabasetest-CachedDatabaseAccess.$(OBJEXT) \
	qabasetest-databaseResultFilter.$(OBJEXT) \
	qabasetest-CheckSignature.$(OBJEXT) \
	qabasetest-DataRequirement.$(OBJEXT) \
	qabasetest-kvCronString.$(OBJEXT)
#am_qabasetest_OBJECTS = $(am__objects_2) \
#	qabasetest-DelayedSaveDatabaseAccessTest.$(OBJEXT) \
#	qabasetest-ScriptResultIdentifierTest.$(OBJEXT) \
#	qabasetest-KvalobsCheckScriptTest.$(OBJEXT) \
#	qabasetest-test.$(OBJEXT) \
#	qabasetest-DataRequirementTest.$(OBJEXT) \
#	qabasetest-CheckRunnerTest.$(OBJEXT) \
#	qabasetest-FakeDatabaseAccess.$(OBJEXT) \
#	qabasetest-CheckSignatureTest.$(OBJEXT) \
#	qabasetest-DataStoreTest.$(OBJEXT) \
#	qabasetest-kvCronStringTest.$(OBJEXT) \
#	qabasetest-databaseResultFilterTest.$(OBJEXT) \
#	qabasetest-populateScriptTest.$(OBJEXT)
qabasetest_OBJECTS = $(am_qabasetest_OBJECTS)
am__DEPENDENCIES_1 =
#qabasetest_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(kvQabased_SOURCES) $(qabasetest_SOURCES)
DIST_SOURCES = $(kvQabased_SOURCES) $(am__qabasetest_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/vegardb/kvoss/kvalobs/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/vegardb/kvoss/kvalobs/missing --run autoconf
AUTOHEADER = ${SHELL} /home/vegardb/kvoss/kvalobs/missing --run autoheader
AUTOMAKE = ${SHELL} /home/vegardb/kvoss/kvalobs/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt
BOOST_LDFLAGS = -L/usr/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt
BOOST_REGEX_LIB = -lboost_regex-mt
BOOST_THREAD_LIB = -lboost_thread-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GMOCK_CONFIG = no
GREP = /bin/grep
GTEST_CONFIG = no
IDL = PYTHONPATH=/usr/lib/python2.4/site-packages/ /usr/bin/omniidl
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KVALOBSLIBS_SO_VERSION = 2:0:0
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lperl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/vegardb/kvoss/kvalobs/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OLD_KVALOBSLIBS_SO_VERSION = 2:0:0
OTOOL = 
OTOOL64 = 
PACKAGE = kvalobs
PACKAGE_BUGREPORT = kvoss@met.no
PACKAGE_NAME = kvalobs
PACKAGE_STRING = kvalobs 2.5.4
PACKAGE_TARNAME = kvalobs
PACKAGE_URL = 
PACKAGE_VERSION = 2.5.4
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /disk1/local/lib/pkgconfig/
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2.5.4
YACC = yacc
YFLAGS = 
abs_builddir = /home/vegardb/kvoss/kvalobs/src/test2kv/src/kvQabased
abs_srcdir = /home/vegardb/kvoss/kvalobs/src/kvQabased
abs_top_builddir = /home/vegardb/kvoss/kvalobs/src/test2kv
abs_top_srcdir = /home/vegardb/kvoss/kvalobs
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
cppunit_CFLAGS =  
cppunit_LIBS = -lcppunit  
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gmock_CFLAGS = 
gmock_LIBS = 
gtest_CFLAGS = 
gtest_LIBS = 
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vegardb/kvoss/kvalobs/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libpose_CFLAGS = 
libpose_LIBS = 
libxml2_CFLAGS = -I/usr/include/libxml2  
libxml2_LIBS = -lxml2  
libxmlpp_CFLAGS = -I/usr/include/libxml2 -I/usr/include/glibmm-2.4 -I/usr/lib/x86_64-linux-gnu/glibmm-2.4/include -I/usr/include/sigc++-2.0 -I/usr/lib/x86_64-linux-gnu/sigc++-2.0/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/libxml++-2.6 -I/usr/lib/libxml++-2.6/include  
libxmlpp_LIBS = -lxml++-2.6 -lxml2 -lglibmm-2.4 -lgobject-2.0 -lsigc-2.0 -lglib-2.0  
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
omniDynamic4_CFLAGS = -D__x86_64__ -D__linux__ -D__OSVERSION__=2  
omniDynamic4_LIBS = -lomniDynamic4 -lomniORB4 -lomnithread  
omniORB4_CFLAGS = -D__x86_64__ -D__linux__ -D__OSVERSION__=2  
omniORB4_LIBS = -lomniORB4 -lomnithread  
pdfdir = ${docdir}
perl_CFLAGS =  -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64  -I/usr/lib/perl/5.14/CORE 
perl_LIBS = -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.14/CORE -lperl -ldl -lm -lpthread -lc -lcrypt
postgresql_CFLAGS = -I/usr/include/postgresql
postgresql_LIBS = -L/usr/lib -lpq
prefix = /disk1/kvalobs
program_transform_name = s,x,x,
psdir = ${docdir}
putools_CFLAGS = -I/disk1/local/include/metlibs  
putools_LIBS = -L/disk1/local/lib -lpuTools -lcurl  
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sqlite3_CFLAGS =  
sqlite3_LIBS = -lsqlite3  
srcdir = /home/vegardb/kvoss/kvalobs/src/kvQabased
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = /home/vegardb/kvoss/kvalobs
AM_CPPFLAGS = \
	-I$(srcdir)/src/ \
	-I$(top_srcdir)/src/lib \
	-I$(top_builddir)/src/lib \
	-I$(top_builddir)/src/lib/kvskel \
	$(putools_CFLAGS) \
	$(BOOST_CPPFLAGS) \
	$(perl_CFLAGS)

AM_LDFLAGS = \
	$(top_builddir)/src/lib/milog/libkvalobs2_milog.la \
	$(top_builddir)/src/lib/kvalobs/libkvalobs2_kvalobs.la \
	$(top_builddir)/src/lib/kvdb/libkvalobs2_kvdb.la \
	$(top_builddir)/src/lib/fileutil/libkvalobs2_fileutil.la \
	$(top_builddir)/src/lib/miutil/libkvalobs2_miutil.la \
	$(top_builddir)/src/lib/miconfparser/libkvalobs2_miconfparser.la \
	$(top_builddir)/src/lib/corbahelper/libkvalobs2_corbahelper.la \
	$(top_builddir)/src/lib/kvskel/libkvalobs2_kvadmininterface.la \
	$(top_builddir)/src/lib/kvskel/libkvalobs2_kvskel.la \
	$(top_builddir)/src/lib/dnmithread/libkvalobs2_dnmithread.la \
	$(putools_LIBS) \
	$(BOOST_PROGRAM_OPTIONS_LIB) \
	$(BOOST_FILESYSTEM_LIB) \
	$(BOOST_REGEX_LIB) \
	$(BOOST_THREAD_LIB) -lboost_system \
	$(omniORB4_LIBS) \
	$(perl_LIBS)

qabase_src_SOURCES = src/Exception.h src/CheckRunner.h \
	src/LogFileCreator.cpp src/CheckRunner.cpp \
	src/Configuration.cpp src/Configuration.h src/LogFileCreator.h \
	src/scriptrunner/RunResult.h src/scriptrunner/ScriptInput.cpp \
	src/scriptrunner/Script.h src/scriptrunner/Script.cpp \
	src/scriptrunner/ScriptInput.h src/scriptrunner/RunResult.cpp \
	src/scriptrunner/language/interpreterRegistration.cpp \
	src/scriptrunner/language/Interpreter.h \
	src/scriptrunner/language/Interpreter.cpp \
	src/scriptrunner/language/interpreterRegistration.h \
	src/scriptrunner/language/perl/kvPerlParser.h \
	src/scriptrunner/language/perl/kvPerlParser.cc \
	src/scriptrunner/language/perl/PerlInterpreter.cpp \
	src/scriptrunner/language/perl/PerlInterpreter.h \
	src/corbalistener/QaWorkCommand.h \
	src/corbalistener/ConnectionHandler.h \
	src/corbalistener/qabaseApp.cpp \
	src/corbalistener/QaWorkCommand.cpp \
	src/corbalistener/qabaseApp.h src/corbalistener/AdminImpl.h \
	src/corbalistener/QaWorkThread.cpp \
	src/corbalistener/corbaMain.h \
	src/corbalistener/qabaseInputImpl.h \
	src/corbalistener/ConnectionHandler.cpp \
	src/corbalistener/corbaMain.cpp \
	src/corbalistener/AdminImpl.cpp \
	src/corbalistener/QaWorkThread.h \
	src/corbalistener/qabaseInputImpl.cpp \
	src/scriptcreate/KvalobsCheckScript.h \
	src/scriptcreate/DataStore.h \
	src/scriptcreate/KvalobsCheckScript.cpp \
	src/scriptcreate/ScriptResultIdentifier.cpp \
	src/scriptcreate/populateScript.h \
	src/scriptcreate/ScriptResultIdentifier.h \
	src/scriptcreate/populateScript.cpp \
	src/scriptcreate/DataStore.cpp \
	src/db/KvalobsDatabaseAccess.cpp \
	src/db/FilteredDatabaseAccess.h \
	src/db/DelayedSaveDatabaseAccess.cpp \
	src/db/databaseResultFilter.h src/db/DatabaseAccess.h \
	src/db/CachedDatabaseAccess.cpp src/db/CachedDatabaseAccess.h \
	src/db/KvalobsDatabaseAccess.h \
	src/db/DelayedSaveDatabaseAccess.h \
	src/db/databaseResultFilter.cpp src/db/cache/DataCache.h \
	src/db/returntypes/CheckSignature.h \
	src/db/returntypes/CheckSignature.cpp \
	src/db/returntypes/DataRequirement.h \
	src/db/returntypes/kvCronString.h \
	src/db/returntypes/DataRequirement.cpp \
	src/db/returntypes/kvCronString.cc
EXTRA_DIST = $(qabase_src_SOURCES) 
kvQabased_SOURCES = $(qabase_src_SOURCES) src/main.cpp
logdir = $(localstatedir)/log/kvalobs
kvQabased_CPPFLAGS = \
	$(AM_CPPFLAGS)

dist_bin_SCRIPTS = scripts/qabase_log_cleanup scripts/kvlogread
#TESTS = $(check_PROGRAMS)
#qabasetest_SOURCES = $(qabase_src_SOURCES) \
#	test/DelayedSaveDatabaseAccessTest.cpp \
#	test/ScriptResultIdentifierTest.cpp \
#	test/KvalobsCheckScriptTest.cpp test/test.cpp \
#	test/DataRequirementTest.cpp \
#	test/CheckRunnerTest.cpp \
#	test/FakeDatabaseAccess.cpp \
#	test/CheckSignatureTest.cpp \
#	test/DataStoreTest.cpp \
#	test/FakeDatabaseAccess.h \
#	test/kvCronStringTest.cpp \
#	test/databaseResultFilterTest.cpp \
#	test/MockDatabaseAccess.h \
#	test/populateScriptTest.cpp
#qabasetest_CPPFLAGS = $(AM_CPPFLAGS) $(gmock_CFLAGS)
#qabasetest_LDADD = $(gmock_LIBS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/src/qabase.mk $(srcdir)/src/scriptrunner/qabase.mk $(srcdir)/src/scriptrunner/language/qabase.mk $(srcdir)/src/scriptrunner/language/perl/qabase.mk $(srcdir)/src/corbalistener/qabase.mk $(srcdir)/src/scriptcreate/qabase.mk $(srcdir)/src/db/qabase.mk $(srcdir)/src/db/cache/qabase.mk $(srcdir)/src/db/returntypes/qabase.mk $(srcdir)/scripts/qabase.mk $(srcdir)/test/qabase.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/kvQabased/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/kvQabased/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/src/qabase.mk $(srcdir)/src/scriptrunner/qabase.mk $(srcdir)/src/scriptrunner/language/qabase.mk $(srcdir)/src/scriptrunner/language/perl/qabase.mk $(srcdir)/src/corbalistener/qabase.mk $(srcdir)/src/scriptcreate/qabase.mk $(srcdir)/src/db/qabase.mk $(srcdir)/src/db/cache/qabase.mk $(srcdir)/src/db/returntypes/qabase.mk $(srcdir)/scripts/qabase.mk $(srcdir)/test/qabase.mk:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
kvQabased$(EXEEXT): $(kvQabased_OBJECTS) $(kvQabased_DEPENDENCIES) $(EXTRA_kvQabased_DEPENDENCIES) 
	@rm -f kvQabased$(EXEEXT)
	$(CXXLINK) $(kvQabased_OBJECTS) $(kvQabased_LDADD) $(LIBS)
qabasetest$(EXEEXT): $(qabasetest_OBJECTS) $(qabasetest_DEPENDENCIES) $(EXTRA_qabasetest_DEPENDENCIES) 
	@rm -f qabasetest$(EXEEXT)
	$(CXXLINK) $(qabasetest_OBJECTS) $(qabasetest_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kvQabased-AdminImpl.Po
include ./$(DEPDIR)/kvQabased-CachedDatabaseAccess.Po
include ./$(DEPDIR)/kvQabased-CheckRunner.Po
include ./$(DEPDIR)/kvQabased-CheckSignature.Po
include ./$(DEPDIR)/kvQabased-Configuration.Po
include ./$(DEPDIR)/kvQabased-ConnectionHandler.Po
include ./$(DEPDIR)/kvQabased-DataRequirement.Po
include ./$(DEPDIR)/kvQabased-DataStore.Po
include ./$(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Po
include ./$(DEPDIR)/kvQabased-Interpreter.Po
include ./$(DEPDIR)/kvQabased-KvalobsCheckScript.Po
include ./$(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Po
include ./$(DEPDIR)/kvQabased-LogFileCreator.Po
include ./$(DEPDIR)/kvQabased-PerlInterpreter.Po
include ./$(DEPDIR)/kvQabased-QaWorkCommand.Po
include ./$(DEPDIR)/kvQabased-QaWorkThread.Po
include ./$(DEPDIR)/kvQabased-RunResult.Po
include ./$(DEPDIR)/kvQabased-Script.Po
include ./$(DEPDIR)/kvQabased-ScriptInput.Po
include ./$(DEPDIR)/kvQabased-ScriptResultIdentifier.Po
include ./$(DEPDIR)/kvQabased-corbaMain.Po
include ./$(DEPDIR)/kvQabased-databaseResultFilter.Po
include ./$(DEPDIR)/kvQabased-interpreterRegistration.Po
include ./$(DEPDIR)/kvQabased-kvCronString.Po
include ./$(DEPDIR)/kvQabased-kvPerlParser.Po
include ./$(DEPDIR)/kvQabased-main.Po
include ./$(DEPDIR)/kvQabased-populateScript.Po
include ./$(DEPDIR)/kvQabased-qabaseApp.Po
include ./$(DEPDIR)/kvQabased-qabaseInputImpl.Po
include ./$(DEPDIR)/qabasetest-AdminImpl.Po
include ./$(DEPDIR)/qabasetest-CachedDatabaseAccess.Po
include ./$(DEPDIR)/qabasetest-CheckRunner.Po
include ./$(DEPDIR)/qabasetest-CheckRunnerTest.Po
include ./$(DEPDIR)/qabasetest-CheckSignature.Po
include ./$(DEPDIR)/qabasetest-CheckSignatureTest.Po
include ./$(DEPDIR)/qabasetest-Configuration.Po
include ./$(DEPDIR)/qabasetest-ConnectionHandler.Po
include ./$(DEPDIR)/qabasetest-DataRequirement.Po
include ./$(DEPDIR)/qabasetest-DataRequirementTest.Po
include ./$(DEPDIR)/qabasetest-DataStore.Po
include ./$(DEPDIR)/qabasetest-DataStoreTest.Po
include ./$(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Po
include ./$(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Po
include ./$(DEPDIR)/qabasetest-FakeDatabaseAccess.Po
include ./$(DEPDIR)/qabasetest-Interpreter.Po
include ./$(DEPDIR)/qabasetest-KvalobsCheckScript.Po
include ./$(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Po
include ./$(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Po
include ./$(DEPDIR)/qabasetest-LogFileCreator.Po
include ./$(DEPDIR)/qabasetest-PerlInterpreter.Po
include ./$(DEPDIR)/qabasetest-QaWorkCommand.Po
include ./$(DEPDIR)/qabasetest-QaWorkThread.Po
include ./$(DEPDIR)/qabasetest-RunResult.Po
include ./$(DEPDIR)/qabasetest-Script.Po
include ./$(DEPDIR)/qabasetest-ScriptInput.Po
include ./$(DEPDIR)/qabasetest-ScriptResultIdentifier.Po
include ./$(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Po
include ./$(DEPDIR)/qabasetest-corbaMain.Po
include ./$(DEPDIR)/qabasetest-databaseResultFilter.Po
include ./$(DEPDIR)/qabasetest-databaseResultFilterTest.Po
include ./$(DEPDIR)/qabasetest-interpreterRegistration.Po
include ./$(DEPDIR)/qabasetest-kvCronString.Po
include ./$(DEPDIR)/qabasetest-kvCronStringTest.Po
include ./$(DEPDIR)/qabasetest-kvPerlParser.Po
include ./$(DEPDIR)/qabasetest-populateScript.Po
include ./$(DEPDIR)/qabasetest-populateScriptTest.Po
include ./$(DEPDIR)/qabasetest-qabaseApp.Po
include ./$(DEPDIR)/qabasetest-qabaseInputImpl.Po
include ./$(DEPDIR)/qabasetest-test.Po

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

kvQabased-LogFileCreator.o: src/LogFileCreator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-LogFileCreator.o -MD -MP -MF $(DEPDIR)/kvQabased-LogFileCreator.Tpo -c -o kvQabased-LogFileCreator.o `test -f 'src/LogFileCreator.cpp' || echo '$(srcdir)/'`src/LogFileCreator.cpp
	$(am__mv) $(DEPDIR)/kvQabased-LogFileCreator.Tpo $(DEPDIR)/kvQabased-LogFileCreator.Po
#	source='src/LogFileCreator.cpp' object='kvQabased-LogFileCreator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-LogFileCreator.o `test -f 'src/LogFileCreator.cpp' || echo '$(srcdir)/'`src/LogFileCreator.cpp

kvQabased-LogFileCreator.obj: src/LogFileCreator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-LogFileCreator.obj -MD -MP -MF $(DEPDIR)/kvQabased-LogFileCreator.Tpo -c -o kvQabased-LogFileCreator.obj `if test -f 'src/LogFileCreator.cpp'; then $(CYGPATH_W) 'src/LogFileCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/src/LogFileCreator.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-LogFileCreator.Tpo $(DEPDIR)/kvQabased-LogFileCreator.Po
#	source='src/LogFileCreator.cpp' object='kvQabased-LogFileCreator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-LogFileCreator.obj `if test -f 'src/LogFileCreator.cpp'; then $(CYGPATH_W) 'src/LogFileCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/src/LogFileCreator.cpp'; fi`

kvQabased-CheckRunner.o: src/CheckRunner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CheckRunner.o -MD -MP -MF $(DEPDIR)/kvQabased-CheckRunner.Tpo -c -o kvQabased-CheckRunner.o `test -f 'src/CheckRunner.cpp' || echo '$(srcdir)/'`src/CheckRunner.cpp
	$(am__mv) $(DEPDIR)/kvQabased-CheckRunner.Tpo $(DEPDIR)/kvQabased-CheckRunner.Po
#	source='src/CheckRunner.cpp' object='kvQabased-CheckRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CheckRunner.o `test -f 'src/CheckRunner.cpp' || echo '$(srcdir)/'`src/CheckRunner.cpp

kvQabased-CheckRunner.obj: src/CheckRunner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CheckRunner.obj -MD -MP -MF $(DEPDIR)/kvQabased-CheckRunner.Tpo -c -o kvQabased-CheckRunner.obj `if test -f 'src/CheckRunner.cpp'; then $(CYGPATH_W) 'src/CheckRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CheckRunner.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-CheckRunner.Tpo $(DEPDIR)/kvQabased-CheckRunner.Po
#	source='src/CheckRunner.cpp' object='kvQabased-CheckRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CheckRunner.obj `if test -f 'src/CheckRunner.cpp'; then $(CYGPATH_W) 'src/CheckRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CheckRunner.cpp'; fi`

kvQabased-Configuration.o: src/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Configuration.o -MD -MP -MF $(DEPDIR)/kvQabased-Configuration.Tpo -c -o kvQabased-Configuration.o `test -f 'src/Configuration.cpp' || echo '$(srcdir)/'`src/Configuration.cpp
	$(am__mv) $(DEPDIR)/kvQabased-Configuration.Tpo $(DEPDIR)/kvQabased-Configuration.Po
#	source='src/Configuration.cpp' object='kvQabased-Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Configuration.o `test -f 'src/Configuration.cpp' || echo '$(srcdir)/'`src/Configuration.cpp

kvQabased-Configuration.obj: src/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Configuration.obj -MD -MP -MF $(DEPDIR)/kvQabased-Configuration.Tpo -c -o kvQabased-Configuration.obj `if test -f 'src/Configuration.cpp'; then $(CYGPATH_W) 'src/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Configuration.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-Configuration.Tpo $(DEPDIR)/kvQabased-Configuration.Po
#	source='src/Configuration.cpp' object='kvQabased-Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Configuration.obj `if test -f 'src/Configuration.cpp'; then $(CYGPATH_W) 'src/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Configuration.cpp'; fi`

kvQabased-ScriptInput.o: src/scriptrunner/ScriptInput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ScriptInput.o -MD -MP -MF $(DEPDIR)/kvQabased-ScriptInput.Tpo -c -o kvQabased-ScriptInput.o `test -f 'src/scriptrunner/ScriptInput.cpp' || echo '$(srcdir)/'`src/scriptrunner/ScriptInput.cpp
	$(am__mv) $(DEPDIR)/kvQabased-ScriptInput.Tpo $(DEPDIR)/kvQabased-ScriptInput.Po
#	source='src/scriptrunner/ScriptInput.cpp' object='kvQabased-ScriptInput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ScriptInput.o `test -f 'src/scriptrunner/ScriptInput.cpp' || echo '$(srcdir)/'`src/scriptrunner/ScriptInput.cpp

kvQabased-ScriptInput.obj: src/scriptrunner/ScriptInput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ScriptInput.obj -MD -MP -MF $(DEPDIR)/kvQabased-ScriptInput.Tpo -c -o kvQabased-ScriptInput.obj `if test -f 'src/scriptrunner/ScriptInput.cpp'; then $(CYGPATH_W) 'src/scriptrunner/ScriptInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/ScriptInput.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-ScriptInput.Tpo $(DEPDIR)/kvQabased-ScriptInput.Po
#	source='src/scriptrunner/ScriptInput.cpp' object='kvQabased-ScriptInput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ScriptInput.obj `if test -f 'src/scriptrunner/ScriptInput.cpp'; then $(CYGPATH_W) 'src/scriptrunner/ScriptInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/ScriptInput.cpp'; fi`

kvQabased-Script.o: src/scriptrunner/Script.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Script.o -MD -MP -MF $(DEPDIR)/kvQabased-Script.Tpo -c -o kvQabased-Script.o `test -f 'src/scriptrunner/Script.cpp' || echo '$(srcdir)/'`src/scriptrunner/Script.cpp
	$(am__mv) $(DEPDIR)/kvQabased-Script.Tpo $(DEPDIR)/kvQabased-Script.Po
#	source='src/scriptrunner/Script.cpp' object='kvQabased-Script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Script.o `test -f 'src/scriptrunner/Script.cpp' || echo '$(srcdir)/'`src/scriptrunner/Script.cpp

kvQabased-Script.obj: src/scriptrunner/Script.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Script.obj -MD -MP -MF $(DEPDIR)/kvQabased-Script.Tpo -c -o kvQabased-Script.obj `if test -f 'src/scriptrunner/Script.cpp'; then $(CYGPATH_W) 'src/scriptrunner/Script.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/Script.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-Script.Tpo $(DEPDIR)/kvQabased-Script.Po
#	source='src/scriptrunner/Script.cpp' object='kvQabased-Script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Script.obj `if test -f 'src/scriptrunner/Script.cpp'; then $(CYGPATH_W) 'src/scriptrunner/Script.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/Script.cpp'; fi`

kvQabased-RunResult.o: src/scriptrunner/RunResult.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-RunResult.o -MD -MP -MF $(DEPDIR)/kvQabased-RunResult.Tpo -c -o kvQabased-RunResult.o `test -f 'src/scriptrunner/RunResult.cpp' || echo '$(srcdir)/'`src/scriptrunner/RunResult.cpp
	$(am__mv) $(DEPDIR)/kvQabased-RunResult.Tpo $(DEPDIR)/kvQabased-RunResult.Po
#	source='src/scriptrunner/RunResult.cpp' object='kvQabased-RunResult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-RunResult.o `test -f 'src/scriptrunner/RunResult.cpp' || echo '$(srcdir)/'`src/scriptrunner/RunResult.cpp

kvQabased-RunResult.obj: src/scriptrunner/RunResult.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-RunResult.obj -MD -MP -MF $(DEPDIR)/kvQabased-RunResult.Tpo -c -o kvQabased-RunResult.obj `if test -f 'src/scriptrunner/RunResult.cpp'; then $(CYGPATH_W) 'src/scriptrunner/RunResult.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/RunResult.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-RunResult.Tpo $(DEPDIR)/kvQabased-RunResult.Po
#	source='src/scriptrunner/RunResult.cpp' object='kvQabased-RunResult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-RunResult.obj `if test -f 'src/scriptrunner/RunResult.cpp'; then $(CYGPATH_W) 'src/scriptrunner/RunResult.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/RunResult.cpp'; fi`

kvQabased-interpreterRegistration.o: src/scriptrunner/language/interpreterRegistration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-interpreterRegistration.o -MD -MP -MF $(DEPDIR)/kvQabased-interpreterRegistration.Tpo -c -o kvQabased-interpreterRegistration.o `test -f 'src/scriptrunner/language/interpreterRegistration.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/interpreterRegistration.cpp
	$(am__mv) $(DEPDIR)/kvQabased-interpreterRegistration.Tpo $(DEPDIR)/kvQabased-interpreterRegistration.Po
#	source='src/scriptrunner/language/interpreterRegistration.cpp' object='kvQabased-interpreterRegistration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-interpreterRegistration.o `test -f 'src/scriptrunner/language/interpreterRegistration.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/interpreterRegistration.cpp

kvQabased-interpreterRegistration.obj: src/scriptrunner/language/interpreterRegistration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-interpreterRegistration.obj -MD -MP -MF $(DEPDIR)/kvQabased-interpreterRegistration.Tpo -c -o kvQabased-interpreterRegistration.obj `if test -f 'src/scriptrunner/language/interpreterRegistration.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/interpreterRegistration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/interpreterRegistration.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-interpreterRegistration.Tpo $(DEPDIR)/kvQabased-interpreterRegistration.Po
#	source='src/scriptrunner/language/interpreterRegistration.cpp' object='kvQabased-interpreterRegistration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-interpreterRegistration.obj `if test -f 'src/scriptrunner/language/interpreterRegistration.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/interpreterRegistration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/interpreterRegistration.cpp'; fi`

kvQabased-Interpreter.o: src/scriptrunner/language/Interpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Interpreter.o -MD -MP -MF $(DEPDIR)/kvQabased-Interpreter.Tpo -c -o kvQabased-Interpreter.o `test -f 'src/scriptrunner/language/Interpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/Interpreter.cpp
	$(am__mv) $(DEPDIR)/kvQabased-Interpreter.Tpo $(DEPDIR)/kvQabased-Interpreter.Po
#	source='src/scriptrunner/language/Interpreter.cpp' object='kvQabased-Interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Interpreter.o `test -f 'src/scriptrunner/language/Interpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/Interpreter.cpp

kvQabased-Interpreter.obj: src/scriptrunner/language/Interpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-Interpreter.obj -MD -MP -MF $(DEPDIR)/kvQabased-Interpreter.Tpo -c -o kvQabased-Interpreter.obj `if test -f 'src/scriptrunner/language/Interpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/Interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/Interpreter.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-Interpreter.Tpo $(DEPDIR)/kvQabased-Interpreter.Po
#	source='src/scriptrunner/language/Interpreter.cpp' object='kvQabased-Interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-Interpreter.obj `if test -f 'src/scriptrunner/language/Interpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/Interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/Interpreter.cpp'; fi`

kvQabased-kvPerlParser.o: src/scriptrunner/language/perl/kvPerlParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-kvPerlParser.o -MD -MP -MF $(DEPDIR)/kvQabased-kvPerlParser.Tpo -c -o kvQabased-kvPerlParser.o `test -f 'src/scriptrunner/language/perl/kvPerlParser.cc' || echo '$(srcdir)/'`src/scriptrunner/language/perl/kvPerlParser.cc
	$(am__mv) $(DEPDIR)/kvQabased-kvPerlParser.Tpo $(DEPDIR)/kvQabased-kvPerlParser.Po
#	source='src/scriptrunner/language/perl/kvPerlParser.cc' object='kvQabased-kvPerlParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-kvPerlParser.o `test -f 'src/scriptrunner/language/perl/kvPerlParser.cc' || echo '$(srcdir)/'`src/scriptrunner/language/perl/kvPerlParser.cc

kvQabased-kvPerlParser.obj: src/scriptrunner/language/perl/kvPerlParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-kvPerlParser.obj -MD -MP -MF $(DEPDIR)/kvQabased-kvPerlParser.Tpo -c -o kvQabased-kvPerlParser.obj `if test -f 'src/scriptrunner/language/perl/kvPerlParser.cc'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/kvPerlParser.cc'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/kvPerlParser.cc'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-kvPerlParser.Tpo $(DEPDIR)/kvQabased-kvPerlParser.Po
#	source='src/scriptrunner/language/perl/kvPerlParser.cc' object='kvQabased-kvPerlParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-kvPerlParser.obj `if test -f 'src/scriptrunner/language/perl/kvPerlParser.cc'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/kvPerlParser.cc'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/kvPerlParser.cc'; fi`

kvQabased-PerlInterpreter.o: src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-PerlInterpreter.o -MD -MP -MF $(DEPDIR)/kvQabased-PerlInterpreter.Tpo -c -o kvQabased-PerlInterpreter.o `test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(am__mv) $(DEPDIR)/kvQabased-PerlInterpreter.Tpo $(DEPDIR)/kvQabased-PerlInterpreter.Po
#	source='src/scriptrunner/language/perl/PerlInterpreter.cpp' object='kvQabased-PerlInterpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-PerlInterpreter.o `test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/perl/PerlInterpreter.cpp

kvQabased-PerlInterpreter.obj: src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-PerlInterpreter.obj -MD -MP -MF $(DEPDIR)/kvQabased-PerlInterpreter.Tpo -c -o kvQabased-PerlInterpreter.obj `if test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/PerlInterpreter.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-PerlInterpreter.Tpo $(DEPDIR)/kvQabased-PerlInterpreter.Po
#	source='src/scriptrunner/language/perl/PerlInterpreter.cpp' object='kvQabased-PerlInterpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-PerlInterpreter.obj `if test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/PerlInterpreter.cpp'; fi`

kvQabased-qabaseApp.o: src/corbalistener/qabaseApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-qabaseApp.o -MD -MP -MF $(DEPDIR)/kvQabased-qabaseApp.Tpo -c -o kvQabased-qabaseApp.o `test -f 'src/corbalistener/qabaseApp.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseApp.cpp
	$(am__mv) $(DEPDIR)/kvQabased-qabaseApp.Tpo $(DEPDIR)/kvQabased-qabaseApp.Po
#	source='src/corbalistener/qabaseApp.cpp' object='kvQabased-qabaseApp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-qabaseApp.o `test -f 'src/corbalistener/qabaseApp.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseApp.cpp

kvQabased-qabaseApp.obj: src/corbalistener/qabaseApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-qabaseApp.obj -MD -MP -MF $(DEPDIR)/kvQabased-qabaseApp.Tpo -c -o kvQabased-qabaseApp.obj `if test -f 'src/corbalistener/qabaseApp.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseApp.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-qabaseApp.Tpo $(DEPDIR)/kvQabased-qabaseApp.Po
#	source='src/corbalistener/qabaseApp.cpp' object='kvQabased-qabaseApp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-qabaseApp.obj `if test -f 'src/corbalistener/qabaseApp.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseApp.cpp'; fi`

kvQabased-QaWorkCommand.o: src/corbalistener/QaWorkCommand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-QaWorkCommand.o -MD -MP -MF $(DEPDIR)/kvQabased-QaWorkCommand.Tpo -c -o kvQabased-QaWorkCommand.o `test -f 'src/corbalistener/QaWorkCommand.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkCommand.cpp
	$(am__mv) $(DEPDIR)/kvQabased-QaWorkCommand.Tpo $(DEPDIR)/kvQabased-QaWorkCommand.Po
#	source='src/corbalistener/QaWorkCommand.cpp' object='kvQabased-QaWorkCommand.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-QaWorkCommand.o `test -f 'src/corbalistener/QaWorkCommand.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkCommand.cpp

kvQabased-QaWorkCommand.obj: src/corbalistener/QaWorkCommand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-QaWorkCommand.obj -MD -MP -MF $(DEPDIR)/kvQabased-QaWorkCommand.Tpo -c -o kvQabased-QaWorkCommand.obj `if test -f 'src/corbalistener/QaWorkCommand.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkCommand.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-QaWorkCommand.Tpo $(DEPDIR)/kvQabased-QaWorkCommand.Po
#	source='src/corbalistener/QaWorkCommand.cpp' object='kvQabased-QaWorkCommand.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-QaWorkCommand.obj `if test -f 'src/corbalistener/QaWorkCommand.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkCommand.cpp'; fi`

kvQabased-QaWorkThread.o: src/corbalistener/QaWorkThread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-QaWorkThread.o -MD -MP -MF $(DEPDIR)/kvQabased-QaWorkThread.Tpo -c -o kvQabased-QaWorkThread.o `test -f 'src/corbalistener/QaWorkThread.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkThread.cpp
	$(am__mv) $(DEPDIR)/kvQabased-QaWorkThread.Tpo $(DEPDIR)/kvQabased-QaWorkThread.Po
#	source='src/corbalistener/QaWorkThread.cpp' object='kvQabased-QaWorkThread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-QaWorkThread.o `test -f 'src/corbalistener/QaWorkThread.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkThread.cpp

kvQabased-QaWorkThread.obj: src/corbalistener/QaWorkThread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-QaWorkThread.obj -MD -MP -MF $(DEPDIR)/kvQabased-QaWorkThread.Tpo -c -o kvQabased-QaWorkThread.obj `if test -f 'src/corbalistener/QaWorkThread.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkThread.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkThread.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-QaWorkThread.Tpo $(DEPDIR)/kvQabased-QaWorkThread.Po
#	source='src/corbalistener/QaWorkThread.cpp' object='kvQabased-QaWorkThread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-QaWorkThread.obj `if test -f 'src/corbalistener/QaWorkThread.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkThread.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkThread.cpp'; fi`

kvQabased-ConnectionHandler.o: src/corbalistener/ConnectionHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ConnectionHandler.o -MD -MP -MF $(DEPDIR)/kvQabased-ConnectionHandler.Tpo -c -o kvQabased-ConnectionHandler.o `test -f 'src/corbalistener/ConnectionHandler.cpp' || echo '$(srcdir)/'`src/corbalistener/ConnectionHandler.cpp
	$(am__mv) $(DEPDIR)/kvQabased-ConnectionHandler.Tpo $(DEPDIR)/kvQabased-ConnectionHandler.Po
#	source='src/corbalistener/ConnectionHandler.cpp' object='kvQabased-ConnectionHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ConnectionHandler.o `test -f 'src/corbalistener/ConnectionHandler.cpp' || echo '$(srcdir)/'`src/corbalistener/ConnectionHandler.cpp

kvQabased-ConnectionHandler.obj: src/corbalistener/ConnectionHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ConnectionHandler.obj -MD -MP -MF $(DEPDIR)/kvQabased-ConnectionHandler.Tpo -c -o kvQabased-ConnectionHandler.obj `if test -f 'src/corbalistener/ConnectionHandler.cpp'; then $(CYGPATH_W) 'src/corbalistener/ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/ConnectionHandler.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-ConnectionHandler.Tpo $(DEPDIR)/kvQabased-ConnectionHandler.Po
#	source='src/corbalistener/ConnectionHandler.cpp' object='kvQabased-ConnectionHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ConnectionHandler.obj `if test -f 'src/corbalistener/ConnectionHandler.cpp'; then $(CYGPATH_W) 'src/corbalistener/ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/ConnectionHandler.cpp'; fi`

kvQabased-corbaMain.o: src/corbalistener/corbaMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-corbaMain.o -MD -MP -MF $(DEPDIR)/kvQabased-corbaMain.Tpo -c -o kvQabased-corbaMain.o `test -f 'src/corbalistener/corbaMain.cpp' || echo '$(srcdir)/'`src/corbalistener/corbaMain.cpp
	$(am__mv) $(DEPDIR)/kvQabased-corbaMain.Tpo $(DEPDIR)/kvQabased-corbaMain.Po
#	source='src/corbalistener/corbaMain.cpp' object='kvQabased-corbaMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-corbaMain.o `test -f 'src/corbalistener/corbaMain.cpp' || echo '$(srcdir)/'`src/corbalistener/corbaMain.cpp

kvQabased-corbaMain.obj: src/corbalistener/corbaMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-corbaMain.obj -MD -MP -MF $(DEPDIR)/kvQabased-corbaMain.Tpo -c -o kvQabased-corbaMain.obj `if test -f 'src/corbalistener/corbaMain.cpp'; then $(CYGPATH_W) 'src/corbalistener/corbaMain.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/corbaMain.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-corbaMain.Tpo $(DEPDIR)/kvQabased-corbaMain.Po
#	source='src/corbalistener/corbaMain.cpp' object='kvQabased-corbaMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-corbaMain.obj `if test -f 'src/corbalistener/corbaMain.cpp'; then $(CYGPATH_W) 'src/corbalistener/corbaMain.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/corbaMain.cpp'; fi`

kvQabased-AdminImpl.o: src/corbalistener/AdminImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-AdminImpl.o -MD -MP -MF $(DEPDIR)/kvQabased-AdminImpl.Tpo -c -o kvQabased-AdminImpl.o `test -f 'src/corbalistener/AdminImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/AdminImpl.cpp
	$(am__mv) $(DEPDIR)/kvQabased-AdminImpl.Tpo $(DEPDIR)/kvQabased-AdminImpl.Po
#	source='src/corbalistener/AdminImpl.cpp' object='kvQabased-AdminImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-AdminImpl.o `test -f 'src/corbalistener/AdminImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/AdminImpl.cpp

kvQabased-AdminImpl.obj: src/corbalistener/AdminImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-AdminImpl.obj -MD -MP -MF $(DEPDIR)/kvQabased-AdminImpl.Tpo -c -o kvQabased-AdminImpl.obj `if test -f 'src/corbalistener/AdminImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/AdminImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/AdminImpl.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-AdminImpl.Tpo $(DEPDIR)/kvQabased-AdminImpl.Po
#	source='src/corbalistener/AdminImpl.cpp' object='kvQabased-AdminImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-AdminImpl.obj `if test -f 'src/corbalistener/AdminImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/AdminImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/AdminImpl.cpp'; fi`

kvQabased-qabaseInputImpl.o: src/corbalistener/qabaseInputImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-qabaseInputImpl.o -MD -MP -MF $(DEPDIR)/kvQabased-qabaseInputImpl.Tpo -c -o kvQabased-qabaseInputImpl.o `test -f 'src/corbalistener/qabaseInputImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseInputImpl.cpp
	$(am__mv) $(DEPDIR)/kvQabased-qabaseInputImpl.Tpo $(DEPDIR)/kvQabased-qabaseInputImpl.Po
#	source='src/corbalistener/qabaseInputImpl.cpp' object='kvQabased-qabaseInputImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-qabaseInputImpl.o `test -f 'src/corbalistener/qabaseInputImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseInputImpl.cpp

kvQabased-qabaseInputImpl.obj: src/corbalistener/qabaseInputImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-qabaseInputImpl.obj -MD -MP -MF $(DEPDIR)/kvQabased-qabaseInputImpl.Tpo -c -o kvQabased-qabaseInputImpl.obj `if test -f 'src/corbalistener/qabaseInputImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseInputImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseInputImpl.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-qabaseInputImpl.Tpo $(DEPDIR)/kvQabased-qabaseInputImpl.Po
#	source='src/corbalistener/qabaseInputImpl.cpp' object='kvQabased-qabaseInputImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-qabaseInputImpl.obj `if test -f 'src/corbalistener/qabaseInputImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseInputImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseInputImpl.cpp'; fi`

kvQabased-KvalobsCheckScript.o: src/scriptcreate/KvalobsCheckScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-KvalobsCheckScript.o -MD -MP -MF $(DEPDIR)/kvQabased-KvalobsCheckScript.Tpo -c -o kvQabased-KvalobsCheckScript.o `test -f 'src/scriptcreate/KvalobsCheckScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/KvalobsCheckScript.cpp
	$(am__mv) $(DEPDIR)/kvQabased-KvalobsCheckScript.Tpo $(DEPDIR)/kvQabased-KvalobsCheckScript.Po
#	source='src/scriptcreate/KvalobsCheckScript.cpp' object='kvQabased-KvalobsCheckScript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-KvalobsCheckScript.o `test -f 'src/scriptcreate/KvalobsCheckScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/KvalobsCheckScript.cpp

kvQabased-KvalobsCheckScript.obj: src/scriptcreate/KvalobsCheckScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-KvalobsCheckScript.obj -MD -MP -MF $(DEPDIR)/kvQabased-KvalobsCheckScript.Tpo -c -o kvQabased-KvalobsCheckScript.obj `if test -f 'src/scriptcreate/KvalobsCheckScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/KvalobsCheckScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/KvalobsCheckScript.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-KvalobsCheckScript.Tpo $(DEPDIR)/kvQabased-KvalobsCheckScript.Po
#	source='src/scriptcreate/KvalobsCheckScript.cpp' object='kvQabased-KvalobsCheckScript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-KvalobsCheckScript.obj `if test -f 'src/scriptcreate/KvalobsCheckScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/KvalobsCheckScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/KvalobsCheckScript.cpp'; fi`

kvQabased-ScriptResultIdentifier.o: src/scriptcreate/ScriptResultIdentifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ScriptResultIdentifier.o -MD -MP -MF $(DEPDIR)/kvQabased-ScriptResultIdentifier.Tpo -c -o kvQabased-ScriptResultIdentifier.o `test -f 'src/scriptcreate/ScriptResultIdentifier.cpp' || echo '$(srcdir)/'`src/scriptcreate/ScriptResultIdentifier.cpp
	$(am__mv) $(DEPDIR)/kvQabased-ScriptResultIdentifier.Tpo $(DEPDIR)/kvQabased-ScriptResultIdentifier.Po
#	source='src/scriptcreate/ScriptResultIdentifier.cpp' object='kvQabased-ScriptResultIdentifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ScriptResultIdentifier.o `test -f 'src/scriptcreate/ScriptResultIdentifier.cpp' || echo '$(srcdir)/'`src/scriptcreate/ScriptResultIdentifier.cpp

kvQabased-ScriptResultIdentifier.obj: src/scriptcreate/ScriptResultIdentifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-ScriptResultIdentifier.obj -MD -MP -MF $(DEPDIR)/kvQabased-ScriptResultIdentifier.Tpo -c -o kvQabased-ScriptResultIdentifier.obj `if test -f 'src/scriptcreate/ScriptResultIdentifier.cpp'; then $(CYGPATH_W) 'src/scriptcreate/ScriptResultIdentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/ScriptResultIdentifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-ScriptResultIdentifier.Tpo $(DEPDIR)/kvQabased-ScriptResultIdentifier.Po
#	source='src/scriptcreate/ScriptResultIdentifier.cpp' object='kvQabased-ScriptResultIdentifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-ScriptResultIdentifier.obj `if test -f 'src/scriptcreate/ScriptResultIdentifier.cpp'; then $(CYGPATH_W) 'src/scriptcreate/ScriptResultIdentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/ScriptResultIdentifier.cpp'; fi`

kvQabased-populateScript.o: src/scriptcreate/populateScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-populateScript.o -MD -MP -MF $(DEPDIR)/kvQabased-populateScript.Tpo -c -o kvQabased-populateScript.o `test -f 'src/scriptcreate/populateScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/populateScript.cpp
	$(am__mv) $(DEPDIR)/kvQabased-populateScript.Tpo $(DEPDIR)/kvQabased-populateScript.Po
#	source='src/scriptcreate/populateScript.cpp' object='kvQabased-populateScript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-populateScript.o `test -f 'src/scriptcreate/populateScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/populateScript.cpp

kvQabased-populateScript.obj: src/scriptcreate/populateScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-populateScript.obj -MD -MP -MF $(DEPDIR)/kvQabased-populateScript.Tpo -c -o kvQabased-populateScript.obj `if test -f 'src/scriptcreate/populateScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/populateScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/populateScript.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-populateScript.Tpo $(DEPDIR)/kvQabased-populateScript.Po
#	source='src/scriptcreate/populateScript.cpp' object='kvQabased-populateScript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-populateScript.obj `if test -f 'src/scriptcreate/populateScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/populateScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/populateScript.cpp'; fi`

kvQabased-DataStore.o: src/scriptcreate/DataStore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DataStore.o -MD -MP -MF $(DEPDIR)/kvQabased-DataStore.Tpo -c -o kvQabased-DataStore.o `test -f 'src/scriptcreate/DataStore.cpp' || echo '$(srcdir)/'`src/scriptcreate/DataStore.cpp
	$(am__mv) $(DEPDIR)/kvQabased-DataStore.Tpo $(DEPDIR)/kvQabased-DataStore.Po
#	source='src/scriptcreate/DataStore.cpp' object='kvQabased-DataStore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DataStore.o `test -f 'src/scriptcreate/DataStore.cpp' || echo '$(srcdir)/'`src/scriptcreate/DataStore.cpp

kvQabased-DataStore.obj: src/scriptcreate/DataStore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DataStore.obj -MD -MP -MF $(DEPDIR)/kvQabased-DataStore.Tpo -c -o kvQabased-DataStore.obj `if test -f 'src/scriptcreate/DataStore.cpp'; then $(CYGPATH_W) 'src/scriptcreate/DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/DataStore.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-DataStore.Tpo $(DEPDIR)/kvQabased-DataStore.Po
#	source='src/scriptcreate/DataStore.cpp' object='kvQabased-DataStore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DataStore.obj `if test -f 'src/scriptcreate/DataStore.cpp'; then $(CYGPATH_W) 'src/scriptcreate/DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/DataStore.cpp'; fi`

kvQabased-KvalobsDatabaseAccess.o: src/db/KvalobsDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-KvalobsDatabaseAccess.o -MD -MP -MF $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Tpo -c -o kvQabased-KvalobsDatabaseAccess.o `test -f 'src/db/KvalobsDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/KvalobsDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Tpo $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Po
#	source='src/db/KvalobsDatabaseAccess.cpp' object='kvQabased-KvalobsDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-KvalobsDatabaseAccess.o `test -f 'src/db/KvalobsDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/KvalobsDatabaseAccess.cpp

kvQabased-KvalobsDatabaseAccess.obj: src/db/KvalobsDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-KvalobsDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Tpo -c -o kvQabased-KvalobsDatabaseAccess.obj `if test -f 'src/db/KvalobsDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/KvalobsDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/KvalobsDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Tpo $(DEPDIR)/kvQabased-KvalobsDatabaseAccess.Po
#	source='src/db/KvalobsDatabaseAccess.cpp' object='kvQabased-KvalobsDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-KvalobsDatabaseAccess.obj `if test -f 'src/db/KvalobsDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/KvalobsDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/KvalobsDatabaseAccess.cpp'; fi`

kvQabased-DelayedSaveDatabaseAccess.o: src/db/DelayedSaveDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DelayedSaveDatabaseAccess.o -MD -MP -MF $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Tpo -c -o kvQabased-DelayedSaveDatabaseAccess.o `test -f 'src/db/DelayedSaveDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/DelayedSaveDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Tpo $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Po
#	source='src/db/DelayedSaveDatabaseAccess.cpp' object='kvQabased-DelayedSaveDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DelayedSaveDatabaseAccess.o `test -f 'src/db/DelayedSaveDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/DelayedSaveDatabaseAccess.cpp

kvQabased-DelayedSaveDatabaseAccess.obj: src/db/DelayedSaveDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DelayedSaveDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Tpo -c -o kvQabased-DelayedSaveDatabaseAccess.obj `if test -f 'src/db/DelayedSaveDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/DelayedSaveDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/DelayedSaveDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Tpo $(DEPDIR)/kvQabased-DelayedSaveDatabaseAccess.Po
#	source='src/db/DelayedSaveDatabaseAccess.cpp' object='kvQabased-DelayedSaveDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DelayedSaveDatabaseAccess.obj `if test -f 'src/db/DelayedSaveDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/DelayedSaveDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/DelayedSaveDatabaseAccess.cpp'; fi`

kvQabased-CachedDatabaseAccess.o: src/db/CachedDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CachedDatabaseAccess.o -MD -MP -MF $(DEPDIR)/kvQabased-CachedDatabaseAccess.Tpo -c -o kvQabased-CachedDatabaseAccess.o `test -f 'src/db/CachedDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/CachedDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/kvQabased-CachedDatabaseAccess.Tpo $(DEPDIR)/kvQabased-CachedDatabaseAccess.Po
#	source='src/db/CachedDatabaseAccess.cpp' object='kvQabased-CachedDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CachedDatabaseAccess.o `test -f 'src/db/CachedDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/CachedDatabaseAccess.cpp

kvQabased-CachedDatabaseAccess.obj: src/db/CachedDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CachedDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/kvQabased-CachedDatabaseAccess.Tpo -c -o kvQabased-CachedDatabaseAccess.obj `if test -f 'src/db/CachedDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/CachedDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/CachedDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-CachedDatabaseAccess.Tpo $(DEPDIR)/kvQabased-CachedDatabaseAccess.Po
#	source='src/db/CachedDatabaseAccess.cpp' object='kvQabased-CachedDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CachedDatabaseAccess.obj `if test -f 'src/db/CachedDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/CachedDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/CachedDatabaseAccess.cpp'; fi`

kvQabased-databaseResultFilter.o: src/db/databaseResultFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-databaseResultFilter.o -MD -MP -MF $(DEPDIR)/kvQabased-databaseResultFilter.Tpo -c -o kvQabased-databaseResultFilter.o `test -f 'src/db/databaseResultFilter.cpp' || echo '$(srcdir)/'`src/db/databaseResultFilter.cpp
	$(am__mv) $(DEPDIR)/kvQabased-databaseResultFilter.Tpo $(DEPDIR)/kvQabased-databaseResultFilter.Po
#	source='src/db/databaseResultFilter.cpp' object='kvQabased-databaseResultFilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-databaseResultFilter.o `test -f 'src/db/databaseResultFilter.cpp' || echo '$(srcdir)/'`src/db/databaseResultFilter.cpp

kvQabased-databaseResultFilter.obj: src/db/databaseResultFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-databaseResultFilter.obj -MD -MP -MF $(DEPDIR)/kvQabased-databaseResultFilter.Tpo -c -o kvQabased-databaseResultFilter.obj `if test -f 'src/db/databaseResultFilter.cpp'; then $(CYGPATH_W) 'src/db/databaseResultFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/databaseResultFilter.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-databaseResultFilter.Tpo $(DEPDIR)/kvQabased-databaseResultFilter.Po
#	source='src/db/databaseResultFilter.cpp' object='kvQabased-databaseResultFilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-databaseResultFilter.obj `if test -f 'src/db/databaseResultFilter.cpp'; then $(CYGPATH_W) 'src/db/databaseResultFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/databaseResultFilter.cpp'; fi`

kvQabased-CheckSignature.o: src/db/returntypes/CheckSignature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CheckSignature.o -MD -MP -MF $(DEPDIR)/kvQabased-CheckSignature.Tpo -c -o kvQabased-CheckSignature.o `test -f 'src/db/returntypes/CheckSignature.cpp' || echo '$(srcdir)/'`src/db/returntypes/CheckSignature.cpp
	$(am__mv) $(DEPDIR)/kvQabased-CheckSignature.Tpo $(DEPDIR)/kvQabased-CheckSignature.Po
#	source='src/db/returntypes/CheckSignature.cpp' object='kvQabased-CheckSignature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CheckSignature.o `test -f 'src/db/returntypes/CheckSignature.cpp' || echo '$(srcdir)/'`src/db/returntypes/CheckSignature.cpp

kvQabased-CheckSignature.obj: src/db/returntypes/CheckSignature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-CheckSignature.obj -MD -MP -MF $(DEPDIR)/kvQabased-CheckSignature.Tpo -c -o kvQabased-CheckSignature.obj `if test -f 'src/db/returntypes/CheckSignature.cpp'; then $(CYGPATH_W) 'src/db/returntypes/CheckSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/CheckSignature.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-CheckSignature.Tpo $(DEPDIR)/kvQabased-CheckSignature.Po
#	source='src/db/returntypes/CheckSignature.cpp' object='kvQabased-CheckSignature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-CheckSignature.obj `if test -f 'src/db/returntypes/CheckSignature.cpp'; then $(CYGPATH_W) 'src/db/returntypes/CheckSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/CheckSignature.cpp'; fi`

kvQabased-DataRequirement.o: src/db/returntypes/DataRequirement.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DataRequirement.o -MD -MP -MF $(DEPDIR)/kvQabased-DataRequirement.Tpo -c -o kvQabased-DataRequirement.o `test -f 'src/db/returntypes/DataRequirement.cpp' || echo '$(srcdir)/'`src/db/returntypes/DataRequirement.cpp
	$(am__mv) $(DEPDIR)/kvQabased-DataRequirement.Tpo $(DEPDIR)/kvQabased-DataRequirement.Po
#	source='src/db/returntypes/DataRequirement.cpp' object='kvQabased-DataRequirement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DataRequirement.o `test -f 'src/db/returntypes/DataRequirement.cpp' || echo '$(srcdir)/'`src/db/returntypes/DataRequirement.cpp

kvQabased-DataRequirement.obj: src/db/returntypes/DataRequirement.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-DataRequirement.obj -MD -MP -MF $(DEPDIR)/kvQabased-DataRequirement.Tpo -c -o kvQabased-DataRequirement.obj `if test -f 'src/db/returntypes/DataRequirement.cpp'; then $(CYGPATH_W) 'src/db/returntypes/DataRequirement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/DataRequirement.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-DataRequirement.Tpo $(DEPDIR)/kvQabased-DataRequirement.Po
#	source='src/db/returntypes/DataRequirement.cpp' object='kvQabased-DataRequirement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-DataRequirement.obj `if test -f 'src/db/returntypes/DataRequirement.cpp'; then $(CYGPATH_W) 'src/db/returntypes/DataRequirement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/DataRequirement.cpp'; fi`

kvQabased-kvCronString.o: src/db/returntypes/kvCronString.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-kvCronString.o -MD -MP -MF $(DEPDIR)/kvQabased-kvCronString.Tpo -c -o kvQabased-kvCronString.o `test -f 'src/db/returntypes/kvCronString.cc' || echo '$(srcdir)/'`src/db/returntypes/kvCronString.cc
	$(am__mv) $(DEPDIR)/kvQabased-kvCronString.Tpo $(DEPDIR)/kvQabased-kvCronString.Po
#	source='src/db/returntypes/kvCronString.cc' object='kvQabased-kvCronString.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-kvCronString.o `test -f 'src/db/returntypes/kvCronString.cc' || echo '$(srcdir)/'`src/db/returntypes/kvCronString.cc

kvQabased-kvCronString.obj: src/db/returntypes/kvCronString.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-kvCronString.obj -MD -MP -MF $(DEPDIR)/kvQabased-kvCronString.Tpo -c -o kvQabased-kvCronString.obj `if test -f 'src/db/returntypes/kvCronString.cc'; then $(CYGPATH_W) 'src/db/returntypes/kvCronString.cc'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/kvCronString.cc'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-kvCronString.Tpo $(DEPDIR)/kvQabased-kvCronString.Po
#	source='src/db/returntypes/kvCronString.cc' object='kvQabased-kvCronString.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-kvCronString.obj `if test -f 'src/db/returntypes/kvCronString.cc'; then $(CYGPATH_W) 'src/db/returntypes/kvCronString.cc'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/kvCronString.cc'; fi`

kvQabased-main.o: src/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-main.o -MD -MP -MF $(DEPDIR)/kvQabased-main.Tpo -c -o kvQabased-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp
	$(am__mv) $(DEPDIR)/kvQabased-main.Tpo $(DEPDIR)/kvQabased-main.Po
#	source='src/main.cpp' object='kvQabased-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp

kvQabased-main.obj: src/main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kvQabased-main.obj -MD -MP -MF $(DEPDIR)/kvQabased-main.Tpo -c -o kvQabased-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`
	$(am__mv) $(DEPDIR)/kvQabased-main.Tpo $(DEPDIR)/kvQabased-main.Po
#	source='src/main.cpp' object='kvQabased-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kvQabased_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kvQabased-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`

qabasetest-LogFileCreator.o: src/LogFileCreator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-LogFileCreator.o -MD -MP -MF $(DEPDIR)/qabasetest-LogFileCreator.Tpo -c -o qabasetest-LogFileCreator.o `test -f 'src/LogFileCreator.cpp' || echo '$(srcdir)/'`src/LogFileCreator.cpp
	$(am__mv) $(DEPDIR)/qabasetest-LogFileCreator.Tpo $(DEPDIR)/qabasetest-LogFileCreator.Po
#	source='src/LogFileCreator.cpp' object='qabasetest-LogFileCreator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-LogFileCreator.o `test -f 'src/LogFileCreator.cpp' || echo '$(srcdir)/'`src/LogFileCreator.cpp

qabasetest-LogFileCreator.obj: src/LogFileCreator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-LogFileCreator.obj -MD -MP -MF $(DEPDIR)/qabasetest-LogFileCreator.Tpo -c -o qabasetest-LogFileCreator.obj `if test -f 'src/LogFileCreator.cpp'; then $(CYGPATH_W) 'src/LogFileCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/src/LogFileCreator.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-LogFileCreator.Tpo $(DEPDIR)/qabasetest-LogFileCreator.Po
#	source='src/LogFileCreator.cpp' object='qabasetest-LogFileCreator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-LogFileCreator.obj `if test -f 'src/LogFileCreator.cpp'; then $(CYGPATH_W) 'src/LogFileCreator.cpp'; else $(CYGPATH_W) '$(srcdir)/src/LogFileCreator.cpp'; fi`

qabasetest-CheckRunner.o: src/CheckRunner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckRunner.o -MD -MP -MF $(DEPDIR)/qabasetest-CheckRunner.Tpo -c -o qabasetest-CheckRunner.o `test -f 'src/CheckRunner.cpp' || echo '$(srcdir)/'`src/CheckRunner.cpp
	$(am__mv) $(DEPDIR)/qabasetest-CheckRunner.Tpo $(DEPDIR)/qabasetest-CheckRunner.Po
#	source='src/CheckRunner.cpp' object='qabasetest-CheckRunner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckRunner.o `test -f 'src/CheckRunner.cpp' || echo '$(srcdir)/'`src/CheckRunner.cpp

qabasetest-CheckRunner.obj: src/CheckRunner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckRunner.obj -MD -MP -MF $(DEPDIR)/qabasetest-CheckRunner.Tpo -c -o qabasetest-CheckRunner.obj `if test -f 'src/CheckRunner.cpp'; then $(CYGPATH_W) 'src/CheckRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CheckRunner.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-CheckRunner.Tpo $(DEPDIR)/qabasetest-CheckRunner.Po
#	source='src/CheckRunner.cpp' object='qabasetest-CheckRunner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckRunner.obj `if test -f 'src/CheckRunner.cpp'; then $(CYGPATH_W) 'src/CheckRunner.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CheckRunner.cpp'; fi`

qabasetest-Configuration.o: src/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Configuration.o -MD -MP -MF $(DEPDIR)/qabasetest-Configuration.Tpo -c -o qabasetest-Configuration.o `test -f 'src/Configuration.cpp' || echo '$(srcdir)/'`src/Configuration.cpp
	$(am__mv) $(DEPDIR)/qabasetest-Configuration.Tpo $(DEPDIR)/qabasetest-Configuration.Po
#	source='src/Configuration.cpp' object='qabasetest-Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Configuration.o `test -f 'src/Configuration.cpp' || echo '$(srcdir)/'`src/Configuration.cpp

qabasetest-Configuration.obj: src/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Configuration.obj -MD -MP -MF $(DEPDIR)/qabasetest-Configuration.Tpo -c -o qabasetest-Configuration.obj `if test -f 'src/Configuration.cpp'; then $(CYGPATH_W) 'src/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Configuration.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-Configuration.Tpo $(DEPDIR)/qabasetest-Configuration.Po
#	source='src/Configuration.cpp' object='qabasetest-Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Configuration.obj `if test -f 'src/Configuration.cpp'; then $(CYGPATH_W) 'src/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Configuration.cpp'; fi`

qabasetest-ScriptInput.o: src/scriptrunner/ScriptInput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptInput.o -MD -MP -MF $(DEPDIR)/qabasetest-ScriptInput.Tpo -c -o qabasetest-ScriptInput.o `test -f 'src/scriptrunner/ScriptInput.cpp' || echo '$(srcdir)/'`src/scriptrunner/ScriptInput.cpp
	$(am__mv) $(DEPDIR)/qabasetest-ScriptInput.Tpo $(DEPDIR)/qabasetest-ScriptInput.Po
#	source='src/scriptrunner/ScriptInput.cpp' object='qabasetest-ScriptInput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptInput.o `test -f 'src/scriptrunner/ScriptInput.cpp' || echo '$(srcdir)/'`src/scriptrunner/ScriptInput.cpp

qabasetest-ScriptInput.obj: src/scriptrunner/ScriptInput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptInput.obj -MD -MP -MF $(DEPDIR)/qabasetest-ScriptInput.Tpo -c -o qabasetest-ScriptInput.obj `if test -f 'src/scriptrunner/ScriptInput.cpp'; then $(CYGPATH_W) 'src/scriptrunner/ScriptInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/ScriptInput.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-ScriptInput.Tpo $(DEPDIR)/qabasetest-ScriptInput.Po
#	source='src/scriptrunner/ScriptInput.cpp' object='qabasetest-ScriptInput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptInput.obj `if test -f 'src/scriptrunner/ScriptInput.cpp'; then $(CYGPATH_W) 'src/scriptrunner/ScriptInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/ScriptInput.cpp'; fi`

qabasetest-Script.o: src/scriptrunner/Script.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Script.o -MD -MP -MF $(DEPDIR)/qabasetest-Script.Tpo -c -o qabasetest-Script.o `test -f 'src/scriptrunner/Script.cpp' || echo '$(srcdir)/'`src/scriptrunner/Script.cpp
	$(am__mv) $(DEPDIR)/qabasetest-Script.Tpo $(DEPDIR)/qabasetest-Script.Po
#	source='src/scriptrunner/Script.cpp' object='qabasetest-Script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Script.o `test -f 'src/scriptrunner/Script.cpp' || echo '$(srcdir)/'`src/scriptrunner/Script.cpp

qabasetest-Script.obj: src/scriptrunner/Script.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Script.obj -MD -MP -MF $(DEPDIR)/qabasetest-Script.Tpo -c -o qabasetest-Script.obj `if test -f 'src/scriptrunner/Script.cpp'; then $(CYGPATH_W) 'src/scriptrunner/Script.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/Script.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-Script.Tpo $(DEPDIR)/qabasetest-Script.Po
#	source='src/scriptrunner/Script.cpp' object='qabasetest-Script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Script.obj `if test -f 'src/scriptrunner/Script.cpp'; then $(CYGPATH_W) 'src/scriptrunner/Script.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/Script.cpp'; fi`

qabasetest-RunResult.o: src/scriptrunner/RunResult.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-RunResult.o -MD -MP -MF $(DEPDIR)/qabasetest-RunResult.Tpo -c -o qabasetest-RunResult.o `test -f 'src/scriptrunner/RunResult.cpp' || echo '$(srcdir)/'`src/scriptrunner/RunResult.cpp
	$(am__mv) $(DEPDIR)/qabasetest-RunResult.Tpo $(DEPDIR)/qabasetest-RunResult.Po
#	source='src/scriptrunner/RunResult.cpp' object='qabasetest-RunResult.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-RunResult.o `test -f 'src/scriptrunner/RunResult.cpp' || echo '$(srcdir)/'`src/scriptrunner/RunResult.cpp

qabasetest-RunResult.obj: src/scriptrunner/RunResult.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-RunResult.obj -MD -MP -MF $(DEPDIR)/qabasetest-RunResult.Tpo -c -o qabasetest-RunResult.obj `if test -f 'src/scriptrunner/RunResult.cpp'; then $(CYGPATH_W) 'src/scriptrunner/RunResult.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/RunResult.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-RunResult.Tpo $(DEPDIR)/qabasetest-RunResult.Po
#	source='src/scriptrunner/RunResult.cpp' object='qabasetest-RunResult.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-RunResult.obj `if test -f 'src/scriptrunner/RunResult.cpp'; then $(CYGPATH_W) 'src/scriptrunner/RunResult.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/RunResult.cpp'; fi`

qabasetest-interpreterRegistration.o: src/scriptrunner/language/interpreterRegistration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-interpreterRegistration.o -MD -MP -MF $(DEPDIR)/qabasetest-interpreterRegistration.Tpo -c -o qabasetest-interpreterRegistration.o `test -f 'src/scriptrunner/language/interpreterRegistration.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/interpreterRegistration.cpp
	$(am__mv) $(DEPDIR)/qabasetest-interpreterRegistration.Tpo $(DEPDIR)/qabasetest-interpreterRegistration.Po
#	source='src/scriptrunner/language/interpreterRegistration.cpp' object='qabasetest-interpreterRegistration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-interpreterRegistration.o `test -f 'src/scriptrunner/language/interpreterRegistration.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/interpreterRegistration.cpp

qabasetest-interpreterRegistration.obj: src/scriptrunner/language/interpreterRegistration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-interpreterRegistration.obj -MD -MP -MF $(DEPDIR)/qabasetest-interpreterRegistration.Tpo -c -o qabasetest-interpreterRegistration.obj `if test -f 'src/scriptrunner/language/interpreterRegistration.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/interpreterRegistration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/interpreterRegistration.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-interpreterRegistration.Tpo $(DEPDIR)/qabasetest-interpreterRegistration.Po
#	source='src/scriptrunner/language/interpreterRegistration.cpp' object='qabasetest-interpreterRegistration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-interpreterRegistration.obj `if test -f 'src/scriptrunner/language/interpreterRegistration.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/interpreterRegistration.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/interpreterRegistration.cpp'; fi`

qabasetest-Interpreter.o: src/scriptrunner/language/Interpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Interpreter.o -MD -MP -MF $(DEPDIR)/qabasetest-Interpreter.Tpo -c -o qabasetest-Interpreter.o `test -f 'src/scriptrunner/language/Interpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/Interpreter.cpp
	$(am__mv) $(DEPDIR)/qabasetest-Interpreter.Tpo $(DEPDIR)/qabasetest-Interpreter.Po
#	source='src/scriptrunner/language/Interpreter.cpp' object='qabasetest-Interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Interpreter.o `test -f 'src/scriptrunner/language/Interpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/Interpreter.cpp

qabasetest-Interpreter.obj: src/scriptrunner/language/Interpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-Interpreter.obj -MD -MP -MF $(DEPDIR)/qabasetest-Interpreter.Tpo -c -o qabasetest-Interpreter.obj `if test -f 'src/scriptrunner/language/Interpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/Interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/Interpreter.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-Interpreter.Tpo $(DEPDIR)/qabasetest-Interpreter.Po
#	source='src/scriptrunner/language/Interpreter.cpp' object='qabasetest-Interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-Interpreter.obj `if test -f 'src/scriptrunner/language/Interpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/Interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/Interpreter.cpp'; fi`

qabasetest-kvPerlParser.o: src/scriptrunner/language/perl/kvPerlParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvPerlParser.o -MD -MP -MF $(DEPDIR)/qabasetest-kvPerlParser.Tpo -c -o qabasetest-kvPerlParser.o `test -f 'src/scriptrunner/language/perl/kvPerlParser.cc' || echo '$(srcdir)/'`src/scriptrunner/language/perl/kvPerlParser.cc
	$(am__mv) $(DEPDIR)/qabasetest-kvPerlParser.Tpo $(DEPDIR)/qabasetest-kvPerlParser.Po
#	source='src/scriptrunner/language/perl/kvPerlParser.cc' object='qabasetest-kvPerlParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvPerlParser.o `test -f 'src/scriptrunner/language/perl/kvPerlParser.cc' || echo '$(srcdir)/'`src/scriptrunner/language/perl/kvPerlParser.cc

qabasetest-kvPerlParser.obj: src/scriptrunner/language/perl/kvPerlParser.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvPerlParser.obj -MD -MP -MF $(DEPDIR)/qabasetest-kvPerlParser.Tpo -c -o qabasetest-kvPerlParser.obj `if test -f 'src/scriptrunner/language/perl/kvPerlParser.cc'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/kvPerlParser.cc'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/kvPerlParser.cc'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-kvPerlParser.Tpo $(DEPDIR)/qabasetest-kvPerlParser.Po
#	source='src/scriptrunner/language/perl/kvPerlParser.cc' object='qabasetest-kvPerlParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvPerlParser.obj `if test -f 'src/scriptrunner/language/perl/kvPerlParser.cc'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/kvPerlParser.cc'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/kvPerlParser.cc'; fi`

qabasetest-PerlInterpreter.o: src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-PerlInterpreter.o -MD -MP -MF $(DEPDIR)/qabasetest-PerlInterpreter.Tpo -c -o qabasetest-PerlInterpreter.o `test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(am__mv) $(DEPDIR)/qabasetest-PerlInterpreter.Tpo $(DEPDIR)/qabasetest-PerlInterpreter.Po
#	source='src/scriptrunner/language/perl/PerlInterpreter.cpp' object='qabasetest-PerlInterpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-PerlInterpreter.o `test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp' || echo '$(srcdir)/'`src/scriptrunner/language/perl/PerlInterpreter.cpp

qabasetest-PerlInterpreter.obj: src/scriptrunner/language/perl/PerlInterpreter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-PerlInterpreter.obj -MD -MP -MF $(DEPDIR)/qabasetest-PerlInterpreter.Tpo -c -o qabasetest-PerlInterpreter.obj `if test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/PerlInterpreter.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-PerlInterpreter.Tpo $(DEPDIR)/qabasetest-PerlInterpreter.Po
#	source='src/scriptrunner/language/perl/PerlInterpreter.cpp' object='qabasetest-PerlInterpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-PerlInterpreter.obj `if test -f 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; then $(CYGPATH_W) 'src/scriptrunner/language/perl/PerlInterpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptrunner/language/perl/PerlInterpreter.cpp'; fi`

qabasetest-qabaseApp.o: src/corbalistener/qabaseApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-qabaseApp.o -MD -MP -MF $(DEPDIR)/qabasetest-qabaseApp.Tpo -c -o qabasetest-qabaseApp.o `test -f 'src/corbalistener/qabaseApp.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseApp.cpp
	$(am__mv) $(DEPDIR)/qabasetest-qabaseApp.Tpo $(DEPDIR)/qabasetest-qabaseApp.Po
#	source='src/corbalistener/qabaseApp.cpp' object='qabasetest-qabaseApp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-qabaseApp.o `test -f 'src/corbalistener/qabaseApp.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseApp.cpp

qabasetest-qabaseApp.obj: src/corbalistener/qabaseApp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-qabaseApp.obj -MD -MP -MF $(DEPDIR)/qabasetest-qabaseApp.Tpo -c -o qabasetest-qabaseApp.obj `if test -f 'src/corbalistener/qabaseApp.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseApp.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-qabaseApp.Tpo $(DEPDIR)/qabasetest-qabaseApp.Po
#	source='src/corbalistener/qabaseApp.cpp' object='qabasetest-qabaseApp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-qabaseApp.obj `if test -f 'src/corbalistener/qabaseApp.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseApp.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseApp.cpp'; fi`

qabasetest-QaWorkCommand.o: src/corbalistener/QaWorkCommand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-QaWorkCommand.o -MD -MP -MF $(DEPDIR)/qabasetest-QaWorkCommand.Tpo -c -o qabasetest-QaWorkCommand.o `test -f 'src/corbalistener/QaWorkCommand.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkCommand.cpp
	$(am__mv) $(DEPDIR)/qabasetest-QaWorkCommand.Tpo $(DEPDIR)/qabasetest-QaWorkCommand.Po
#	source='src/corbalistener/QaWorkCommand.cpp' object='qabasetest-QaWorkCommand.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-QaWorkCommand.o `test -f 'src/corbalistener/QaWorkCommand.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkCommand.cpp

qabasetest-QaWorkCommand.obj: src/corbalistener/QaWorkCommand.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-QaWorkCommand.obj -MD -MP -MF $(DEPDIR)/qabasetest-QaWorkCommand.Tpo -c -o qabasetest-QaWorkCommand.obj `if test -f 'src/corbalistener/QaWorkCommand.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkCommand.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-QaWorkCommand.Tpo $(DEPDIR)/qabasetest-QaWorkCommand.Po
#	source='src/corbalistener/QaWorkCommand.cpp' object='qabasetest-QaWorkCommand.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-QaWorkCommand.obj `if test -f 'src/corbalistener/QaWorkCommand.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkCommand.cpp'; fi`

qabasetest-QaWorkThread.o: src/corbalistener/QaWorkThread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-QaWorkThread.o -MD -MP -MF $(DEPDIR)/qabasetest-QaWorkThread.Tpo -c -o qabasetest-QaWorkThread.o `test -f 'src/corbalistener/QaWorkThread.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkThread.cpp
	$(am__mv) $(DEPDIR)/qabasetest-QaWorkThread.Tpo $(DEPDIR)/qabasetest-QaWorkThread.Po
#	source='src/corbalistener/QaWorkThread.cpp' object='qabasetest-QaWorkThread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-QaWorkThread.o `test -f 'src/corbalistener/QaWorkThread.cpp' || echo '$(srcdir)/'`src/corbalistener/QaWorkThread.cpp

qabasetest-QaWorkThread.obj: src/corbalistener/QaWorkThread.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-QaWorkThread.obj -MD -MP -MF $(DEPDIR)/qabasetest-QaWorkThread.Tpo -c -o qabasetest-QaWorkThread.obj `if test -f 'src/corbalistener/QaWorkThread.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkThread.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkThread.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-QaWorkThread.Tpo $(DEPDIR)/qabasetest-QaWorkThread.Po
#	source='src/corbalistener/QaWorkThread.cpp' object='qabasetest-QaWorkThread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-QaWorkThread.obj `if test -f 'src/corbalistener/QaWorkThread.cpp'; then $(CYGPATH_W) 'src/corbalistener/QaWorkThread.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/QaWorkThread.cpp'; fi`

qabasetest-ConnectionHandler.o: src/corbalistener/ConnectionHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ConnectionHandler.o -MD -MP -MF $(DEPDIR)/qabasetest-ConnectionHandler.Tpo -c -o qabasetest-ConnectionHandler.o `test -f 'src/corbalistener/ConnectionHandler.cpp' || echo '$(srcdir)/'`src/corbalistener/ConnectionHandler.cpp
	$(am__mv) $(DEPDIR)/qabasetest-ConnectionHandler.Tpo $(DEPDIR)/qabasetest-ConnectionHandler.Po
#	source='src/corbalistener/ConnectionHandler.cpp' object='qabasetest-ConnectionHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ConnectionHandler.o `test -f 'src/corbalistener/ConnectionHandler.cpp' || echo '$(srcdir)/'`src/corbalistener/ConnectionHandler.cpp

qabasetest-ConnectionHandler.obj: src/corbalistener/ConnectionHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ConnectionHandler.obj -MD -MP -MF $(DEPDIR)/qabasetest-ConnectionHandler.Tpo -c -o qabasetest-ConnectionHandler.obj `if test -f 'src/corbalistener/ConnectionHandler.cpp'; then $(CYGPATH_W) 'src/corbalistener/ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/ConnectionHandler.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-ConnectionHandler.Tpo $(DEPDIR)/qabasetest-ConnectionHandler.Po
#	source='src/corbalistener/ConnectionHandler.cpp' object='qabasetest-ConnectionHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ConnectionHandler.obj `if test -f 'src/corbalistener/ConnectionHandler.cpp'; then $(CYGPATH_W) 'src/corbalistener/ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/ConnectionHandler.cpp'; fi`

qabasetest-corbaMain.o: src/corbalistener/corbaMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-corbaMain.o -MD -MP -MF $(DEPDIR)/qabasetest-corbaMain.Tpo -c -o qabasetest-corbaMain.o `test -f 'src/corbalistener/corbaMain.cpp' || echo '$(srcdir)/'`src/corbalistener/corbaMain.cpp
	$(am__mv) $(DEPDIR)/qabasetest-corbaMain.Tpo $(DEPDIR)/qabasetest-corbaMain.Po
#	source='src/corbalistener/corbaMain.cpp' object='qabasetest-corbaMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-corbaMain.o `test -f 'src/corbalistener/corbaMain.cpp' || echo '$(srcdir)/'`src/corbalistener/corbaMain.cpp

qabasetest-corbaMain.obj: src/corbalistener/corbaMain.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-corbaMain.obj -MD -MP -MF $(DEPDIR)/qabasetest-corbaMain.Tpo -c -o qabasetest-corbaMain.obj `if test -f 'src/corbalistener/corbaMain.cpp'; then $(CYGPATH_W) 'src/corbalistener/corbaMain.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/corbaMain.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-corbaMain.Tpo $(DEPDIR)/qabasetest-corbaMain.Po
#	source='src/corbalistener/corbaMain.cpp' object='qabasetest-corbaMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-corbaMain.obj `if test -f 'src/corbalistener/corbaMain.cpp'; then $(CYGPATH_W) 'src/corbalistener/corbaMain.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/corbaMain.cpp'; fi`

qabasetest-AdminImpl.o: src/corbalistener/AdminImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-AdminImpl.o -MD -MP -MF $(DEPDIR)/qabasetest-AdminImpl.Tpo -c -o qabasetest-AdminImpl.o `test -f 'src/corbalistener/AdminImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/AdminImpl.cpp
	$(am__mv) $(DEPDIR)/qabasetest-AdminImpl.Tpo $(DEPDIR)/qabasetest-AdminImpl.Po
#	source='src/corbalistener/AdminImpl.cpp' object='qabasetest-AdminImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-AdminImpl.o `test -f 'src/corbalistener/AdminImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/AdminImpl.cpp

qabasetest-AdminImpl.obj: src/corbalistener/AdminImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-AdminImpl.obj -MD -MP -MF $(DEPDIR)/qabasetest-AdminImpl.Tpo -c -o qabasetest-AdminImpl.obj `if test -f 'src/corbalistener/AdminImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/AdminImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/AdminImpl.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-AdminImpl.Tpo $(DEPDIR)/qabasetest-AdminImpl.Po
#	source='src/corbalistener/AdminImpl.cpp' object='qabasetest-AdminImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-AdminImpl.obj `if test -f 'src/corbalistener/AdminImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/AdminImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/AdminImpl.cpp'; fi`

qabasetest-qabaseInputImpl.o: src/corbalistener/qabaseInputImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-qabaseInputImpl.o -MD -MP -MF $(DEPDIR)/qabasetest-qabaseInputImpl.Tpo -c -o qabasetest-qabaseInputImpl.o `test -f 'src/corbalistener/qabaseInputImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseInputImpl.cpp
	$(am__mv) $(DEPDIR)/qabasetest-qabaseInputImpl.Tpo $(DEPDIR)/qabasetest-qabaseInputImpl.Po
#	source='src/corbalistener/qabaseInputImpl.cpp' object='qabasetest-qabaseInputImpl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-qabaseInputImpl.o `test -f 'src/corbalistener/qabaseInputImpl.cpp' || echo '$(srcdir)/'`src/corbalistener/qabaseInputImpl.cpp

qabasetest-qabaseInputImpl.obj: src/corbalistener/qabaseInputImpl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-qabaseInputImpl.obj -MD -MP -MF $(DEPDIR)/qabasetest-qabaseInputImpl.Tpo -c -o qabasetest-qabaseInputImpl.obj `if test -f 'src/corbalistener/qabaseInputImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseInputImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseInputImpl.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-qabaseInputImpl.Tpo $(DEPDIR)/qabasetest-qabaseInputImpl.Po
#	source='src/corbalistener/qabaseInputImpl.cpp' object='qabasetest-qabaseInputImpl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-qabaseInputImpl.obj `if test -f 'src/corbalistener/qabaseInputImpl.cpp'; then $(CYGPATH_W) 'src/corbalistener/qabaseInputImpl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/corbalistener/qabaseInputImpl.cpp'; fi`

qabasetest-KvalobsCheckScript.o: src/scriptcreate/KvalobsCheckScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsCheckScript.o -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsCheckScript.Tpo -c -o qabasetest-KvalobsCheckScript.o `test -f 'src/scriptcreate/KvalobsCheckScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/KvalobsCheckScript.cpp
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsCheckScript.Tpo $(DEPDIR)/qabasetest-KvalobsCheckScript.Po
#	source='src/scriptcreate/KvalobsCheckScript.cpp' object='qabasetest-KvalobsCheckScript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsCheckScript.o `test -f 'src/scriptcreate/KvalobsCheckScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/KvalobsCheckScript.cpp

qabasetest-KvalobsCheckScript.obj: src/scriptcreate/KvalobsCheckScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsCheckScript.obj -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsCheckScript.Tpo -c -o qabasetest-KvalobsCheckScript.obj `if test -f 'src/scriptcreate/KvalobsCheckScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/KvalobsCheckScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/KvalobsCheckScript.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsCheckScript.Tpo $(DEPDIR)/qabasetest-KvalobsCheckScript.Po
#	source='src/scriptcreate/KvalobsCheckScript.cpp' object='qabasetest-KvalobsCheckScript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsCheckScript.obj `if test -f 'src/scriptcreate/KvalobsCheckScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/KvalobsCheckScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/KvalobsCheckScript.cpp'; fi`

qabasetest-ScriptResultIdentifier.o: src/scriptcreate/ScriptResultIdentifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptResultIdentifier.o -MD -MP -MF $(DEPDIR)/qabasetest-ScriptResultIdentifier.Tpo -c -o qabasetest-ScriptResultIdentifier.o `test -f 'src/scriptcreate/ScriptResultIdentifier.cpp' || echo '$(srcdir)/'`src/scriptcreate/ScriptResultIdentifier.cpp
	$(am__mv) $(DEPDIR)/qabasetest-ScriptResultIdentifier.Tpo $(DEPDIR)/qabasetest-ScriptResultIdentifier.Po
#	source='src/scriptcreate/ScriptResultIdentifier.cpp' object='qabasetest-ScriptResultIdentifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptResultIdentifier.o `test -f 'src/scriptcreate/ScriptResultIdentifier.cpp' || echo '$(srcdir)/'`src/scriptcreate/ScriptResultIdentifier.cpp

qabasetest-ScriptResultIdentifier.obj: src/scriptcreate/ScriptResultIdentifier.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptResultIdentifier.obj -MD -MP -MF $(DEPDIR)/qabasetest-ScriptResultIdentifier.Tpo -c -o qabasetest-ScriptResultIdentifier.obj `if test -f 'src/scriptcreate/ScriptResultIdentifier.cpp'; then $(CYGPATH_W) 'src/scriptcreate/ScriptResultIdentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/ScriptResultIdentifier.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-ScriptResultIdentifier.Tpo $(DEPDIR)/qabasetest-ScriptResultIdentifier.Po
#	source='src/scriptcreate/ScriptResultIdentifier.cpp' object='qabasetest-ScriptResultIdentifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptResultIdentifier.obj `if test -f 'src/scriptcreate/ScriptResultIdentifier.cpp'; then $(CYGPATH_W) 'src/scriptcreate/ScriptResultIdentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/ScriptResultIdentifier.cpp'; fi`

qabasetest-populateScript.o: src/scriptcreate/populateScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-populateScript.o -MD -MP -MF $(DEPDIR)/qabasetest-populateScript.Tpo -c -o qabasetest-populateScript.o `test -f 'src/scriptcreate/populateScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/populateScript.cpp
	$(am__mv) $(DEPDIR)/qabasetest-populateScript.Tpo $(DEPDIR)/qabasetest-populateScript.Po
#	source='src/scriptcreate/populateScript.cpp' object='qabasetest-populateScript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-populateScript.o `test -f 'src/scriptcreate/populateScript.cpp' || echo '$(srcdir)/'`src/scriptcreate/populateScript.cpp

qabasetest-populateScript.obj: src/scriptcreate/populateScript.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-populateScript.obj -MD -MP -MF $(DEPDIR)/qabasetest-populateScript.Tpo -c -o qabasetest-populateScript.obj `if test -f 'src/scriptcreate/populateScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/populateScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/populateScript.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-populateScript.Tpo $(DEPDIR)/qabasetest-populateScript.Po
#	source='src/scriptcreate/populateScript.cpp' object='qabasetest-populateScript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-populateScript.obj `if test -f 'src/scriptcreate/populateScript.cpp'; then $(CYGPATH_W) 'src/scriptcreate/populateScript.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/populateScript.cpp'; fi`

qabasetest-DataStore.o: src/scriptcreate/DataStore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataStore.o -MD -MP -MF $(DEPDIR)/qabasetest-DataStore.Tpo -c -o qabasetest-DataStore.o `test -f 'src/scriptcreate/DataStore.cpp' || echo '$(srcdir)/'`src/scriptcreate/DataStore.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DataStore.Tpo $(DEPDIR)/qabasetest-DataStore.Po
#	source='src/scriptcreate/DataStore.cpp' object='qabasetest-DataStore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataStore.o `test -f 'src/scriptcreate/DataStore.cpp' || echo '$(srcdir)/'`src/scriptcreate/DataStore.cpp

qabasetest-DataStore.obj: src/scriptcreate/DataStore.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataStore.obj -MD -MP -MF $(DEPDIR)/qabasetest-DataStore.Tpo -c -o qabasetest-DataStore.obj `if test -f 'src/scriptcreate/DataStore.cpp'; then $(CYGPATH_W) 'src/scriptcreate/DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/DataStore.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DataStore.Tpo $(DEPDIR)/qabasetest-DataStore.Po
#	source='src/scriptcreate/DataStore.cpp' object='qabasetest-DataStore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataStore.obj `if test -f 'src/scriptcreate/DataStore.cpp'; then $(CYGPATH_W) 'src/scriptcreate/DataStore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/scriptcreate/DataStore.cpp'; fi`

qabasetest-KvalobsDatabaseAccess.o: src/db/KvalobsDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsDatabaseAccess.o -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Tpo -c -o qabasetest-KvalobsDatabaseAccess.o `test -f 'src/db/KvalobsDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/KvalobsDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Tpo $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Po
#	source='src/db/KvalobsDatabaseAccess.cpp' object='qabasetest-KvalobsDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsDatabaseAccess.o `test -f 'src/db/KvalobsDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/KvalobsDatabaseAccess.cpp

qabasetest-KvalobsDatabaseAccess.obj: src/db/KvalobsDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Tpo -c -o qabasetest-KvalobsDatabaseAccess.obj `if test -f 'src/db/KvalobsDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/KvalobsDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/KvalobsDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Tpo $(DEPDIR)/qabasetest-KvalobsDatabaseAccess.Po
#	source='src/db/KvalobsDatabaseAccess.cpp' object='qabasetest-KvalobsDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsDatabaseAccess.obj `if test -f 'src/db/KvalobsDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/KvalobsDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/KvalobsDatabaseAccess.cpp'; fi`

qabasetest-DelayedSaveDatabaseAccess.o: src/db/DelayedSaveDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DelayedSaveDatabaseAccess.o -MD -MP -MF $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Tpo -c -o qabasetest-DelayedSaveDatabaseAccess.o `test -f 'src/db/DelayedSaveDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/DelayedSaveDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Tpo $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Po
#	source='src/db/DelayedSaveDatabaseAccess.cpp' object='qabasetest-DelayedSaveDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DelayedSaveDatabaseAccess.o `test -f 'src/db/DelayedSaveDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/DelayedSaveDatabaseAccess.cpp

qabasetest-DelayedSaveDatabaseAccess.obj: src/db/DelayedSaveDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DelayedSaveDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Tpo -c -o qabasetest-DelayedSaveDatabaseAccess.obj `if test -f 'src/db/DelayedSaveDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/DelayedSaveDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/DelayedSaveDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Tpo $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccess.Po
#	source='src/db/DelayedSaveDatabaseAccess.cpp' object='qabasetest-DelayedSaveDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DelayedSaveDatabaseAccess.obj `if test -f 'src/db/DelayedSaveDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/DelayedSaveDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/DelayedSaveDatabaseAccess.cpp'; fi`

qabasetest-CachedDatabaseAccess.o: src/db/CachedDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CachedDatabaseAccess.o -MD -MP -MF $(DEPDIR)/qabasetest-CachedDatabaseAccess.Tpo -c -o qabasetest-CachedDatabaseAccess.o `test -f 'src/db/CachedDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/CachedDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/qabasetest-CachedDatabaseAccess.Tpo $(DEPDIR)/qabasetest-CachedDatabaseAccess.Po
#	source='src/db/CachedDatabaseAccess.cpp' object='qabasetest-CachedDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CachedDatabaseAccess.o `test -f 'src/db/CachedDatabaseAccess.cpp' || echo '$(srcdir)/'`src/db/CachedDatabaseAccess.cpp

qabasetest-CachedDatabaseAccess.obj: src/db/CachedDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CachedDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/qabasetest-CachedDatabaseAccess.Tpo -c -o qabasetest-CachedDatabaseAccess.obj `if test -f 'src/db/CachedDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/CachedDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/CachedDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-CachedDatabaseAccess.Tpo $(DEPDIR)/qabasetest-CachedDatabaseAccess.Po
#	source='src/db/CachedDatabaseAccess.cpp' object='qabasetest-CachedDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CachedDatabaseAccess.obj `if test -f 'src/db/CachedDatabaseAccess.cpp'; then $(CYGPATH_W) 'src/db/CachedDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/CachedDatabaseAccess.cpp'; fi`

qabasetest-databaseResultFilter.o: src/db/databaseResultFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-databaseResultFilter.o -MD -MP -MF $(DEPDIR)/qabasetest-databaseResultFilter.Tpo -c -o qabasetest-databaseResultFilter.o `test -f 'src/db/databaseResultFilter.cpp' || echo '$(srcdir)/'`src/db/databaseResultFilter.cpp
	$(am__mv) $(DEPDIR)/qabasetest-databaseResultFilter.Tpo $(DEPDIR)/qabasetest-databaseResultFilter.Po
#	source='src/db/databaseResultFilter.cpp' object='qabasetest-databaseResultFilter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-databaseResultFilter.o `test -f 'src/db/databaseResultFilter.cpp' || echo '$(srcdir)/'`src/db/databaseResultFilter.cpp

qabasetest-databaseResultFilter.obj: src/db/databaseResultFilter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-databaseResultFilter.obj -MD -MP -MF $(DEPDIR)/qabasetest-databaseResultFilter.Tpo -c -o qabasetest-databaseResultFilter.obj `if test -f 'src/db/databaseResultFilter.cpp'; then $(CYGPATH_W) 'src/db/databaseResultFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/databaseResultFilter.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-databaseResultFilter.Tpo $(DEPDIR)/qabasetest-databaseResultFilter.Po
#	source='src/db/databaseResultFilter.cpp' object='qabasetest-databaseResultFilter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-databaseResultFilter.obj `if test -f 'src/db/databaseResultFilter.cpp'; then $(CYGPATH_W) 'src/db/databaseResultFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/databaseResultFilter.cpp'; fi`

qabasetest-CheckSignature.o: src/db/returntypes/CheckSignature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckSignature.o -MD -MP -MF $(DEPDIR)/qabasetest-CheckSignature.Tpo -c -o qabasetest-CheckSignature.o `test -f 'src/db/returntypes/CheckSignature.cpp' || echo '$(srcdir)/'`src/db/returntypes/CheckSignature.cpp
	$(am__mv) $(DEPDIR)/qabasetest-CheckSignature.Tpo $(DEPDIR)/qabasetest-CheckSignature.Po
#	source='src/db/returntypes/CheckSignature.cpp' object='qabasetest-CheckSignature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckSignature.o `test -f 'src/db/returntypes/CheckSignature.cpp' || echo '$(srcdir)/'`src/db/returntypes/CheckSignature.cpp

qabasetest-CheckSignature.obj: src/db/returntypes/CheckSignature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckSignature.obj -MD -MP -MF $(DEPDIR)/qabasetest-CheckSignature.Tpo -c -o qabasetest-CheckSignature.obj `if test -f 'src/db/returntypes/CheckSignature.cpp'; then $(CYGPATH_W) 'src/db/returntypes/CheckSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/CheckSignature.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-CheckSignature.Tpo $(DEPDIR)/qabasetest-CheckSignature.Po
#	source='src/db/returntypes/CheckSignature.cpp' object='qabasetest-CheckSignature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckSignature.obj `if test -f 'src/db/returntypes/CheckSignature.cpp'; then $(CYGPATH_W) 'src/db/returntypes/CheckSignature.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/CheckSignature.cpp'; fi`

qabasetest-DataRequirement.o: src/db/returntypes/DataRequirement.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataRequirement.o -MD -MP -MF $(DEPDIR)/qabasetest-DataRequirement.Tpo -c -o qabasetest-DataRequirement.o `test -f 'src/db/returntypes/DataRequirement.cpp' || echo '$(srcdir)/'`src/db/returntypes/DataRequirement.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DataRequirement.Tpo $(DEPDIR)/qabasetest-DataRequirement.Po
#	source='src/db/returntypes/DataRequirement.cpp' object='qabasetest-DataRequirement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataRequirement.o `test -f 'src/db/returntypes/DataRequirement.cpp' || echo '$(srcdir)/'`src/db/returntypes/DataRequirement.cpp

qabasetest-DataRequirement.obj: src/db/returntypes/DataRequirement.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataRequirement.obj -MD -MP -MF $(DEPDIR)/qabasetest-DataRequirement.Tpo -c -o qabasetest-DataRequirement.obj `if test -f 'src/db/returntypes/DataRequirement.cpp'; then $(CYGPATH_W) 'src/db/returntypes/DataRequirement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/DataRequirement.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DataRequirement.Tpo $(DEPDIR)/qabasetest-DataRequirement.Po
#	source='src/db/returntypes/DataRequirement.cpp' object='qabasetest-DataRequirement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataRequirement.obj `if test -f 'src/db/returntypes/DataRequirement.cpp'; then $(CYGPATH_W) 'src/db/returntypes/DataRequirement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/DataRequirement.cpp'; fi`

qabasetest-kvCronString.o: src/db/returntypes/kvCronString.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvCronString.o -MD -MP -MF $(DEPDIR)/qabasetest-kvCronString.Tpo -c -o qabasetest-kvCronString.o `test -f 'src/db/returntypes/kvCronString.cc' || echo '$(srcdir)/'`src/db/returntypes/kvCronString.cc
	$(am__mv) $(DEPDIR)/qabasetest-kvCronString.Tpo $(DEPDIR)/qabasetest-kvCronString.Po
#	source='src/db/returntypes/kvCronString.cc' object='qabasetest-kvCronString.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvCronString.o `test -f 'src/db/returntypes/kvCronString.cc' || echo '$(srcdir)/'`src/db/returntypes/kvCronString.cc

qabasetest-kvCronString.obj: src/db/returntypes/kvCronString.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvCronString.obj -MD -MP -MF $(DEPDIR)/qabasetest-kvCronString.Tpo -c -o qabasetest-kvCronString.obj `if test -f 'src/db/returntypes/kvCronString.cc'; then $(CYGPATH_W) 'src/db/returntypes/kvCronString.cc'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/kvCronString.cc'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-kvCronString.Tpo $(DEPDIR)/qabasetest-kvCronString.Po
#	source='src/db/returntypes/kvCronString.cc' object='qabasetest-kvCronString.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvCronString.obj `if test -f 'src/db/returntypes/kvCronString.cc'; then $(CYGPATH_W) 'src/db/returntypes/kvCronString.cc'; else $(CYGPATH_W) '$(srcdir)/src/db/returntypes/kvCronString.cc'; fi`

qabasetest-DelayedSaveDatabaseAccessTest.o: test/DelayedSaveDatabaseAccessTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DelayedSaveDatabaseAccessTest.o -MD -MP -MF $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Tpo -c -o qabasetest-DelayedSaveDatabaseAccessTest.o `test -f 'test/DelayedSaveDatabaseAccessTest.cpp' || echo '$(srcdir)/'`test/DelayedSaveDatabaseAccessTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Tpo $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Po
#	source='test/DelayedSaveDatabaseAccessTest.cpp' object='qabasetest-DelayedSaveDatabaseAccessTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DelayedSaveDatabaseAccessTest.o `test -f 'test/DelayedSaveDatabaseAccessTest.cpp' || echo '$(srcdir)/'`test/DelayedSaveDatabaseAccessTest.cpp

qabasetest-DelayedSaveDatabaseAccessTest.obj: test/DelayedSaveDatabaseAccessTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DelayedSaveDatabaseAccessTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Tpo -c -o qabasetest-DelayedSaveDatabaseAccessTest.obj `if test -f 'test/DelayedSaveDatabaseAccessTest.cpp'; then $(CYGPATH_W) 'test/DelayedSaveDatabaseAccessTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DelayedSaveDatabaseAccessTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Tpo $(DEPDIR)/qabasetest-DelayedSaveDatabaseAccessTest.Po
#	source='test/DelayedSaveDatabaseAccessTest.cpp' object='qabasetest-DelayedSaveDatabaseAccessTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DelayedSaveDatabaseAccessTest.obj `if test -f 'test/DelayedSaveDatabaseAccessTest.cpp'; then $(CYGPATH_W) 'test/DelayedSaveDatabaseAccessTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DelayedSaveDatabaseAccessTest.cpp'; fi`

qabasetest-ScriptResultIdentifierTest.o: test/ScriptResultIdentifierTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptResultIdentifierTest.o -MD -MP -MF $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Tpo -c -o qabasetest-ScriptResultIdentifierTest.o `test -f 'test/ScriptResultIdentifierTest.cpp' || echo '$(srcdir)/'`test/ScriptResultIdentifierTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Tpo $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Po
#	source='test/ScriptResultIdentifierTest.cpp' object='qabasetest-ScriptResultIdentifierTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptResultIdentifierTest.o `test -f 'test/ScriptResultIdentifierTest.cpp' || echo '$(srcdir)/'`test/ScriptResultIdentifierTest.cpp

qabasetest-ScriptResultIdentifierTest.obj: test/ScriptResultIdentifierTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-ScriptResultIdentifierTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Tpo -c -o qabasetest-ScriptResultIdentifierTest.obj `if test -f 'test/ScriptResultIdentifierTest.cpp'; then $(CYGPATH_W) 'test/ScriptResultIdentifierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/ScriptResultIdentifierTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Tpo $(DEPDIR)/qabasetest-ScriptResultIdentifierTest.Po
#	source='test/ScriptResultIdentifierTest.cpp' object='qabasetest-ScriptResultIdentifierTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-ScriptResultIdentifierTest.obj `if test -f 'test/ScriptResultIdentifierTest.cpp'; then $(CYGPATH_W) 'test/ScriptResultIdentifierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/ScriptResultIdentifierTest.cpp'; fi`

qabasetest-KvalobsCheckScriptTest.o: test/KvalobsCheckScriptTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsCheckScriptTest.o -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Tpo -c -o qabasetest-KvalobsCheckScriptTest.o `test -f 'test/KvalobsCheckScriptTest.cpp' || echo '$(srcdir)/'`test/KvalobsCheckScriptTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Tpo $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Po
#	source='test/KvalobsCheckScriptTest.cpp' object='qabasetest-KvalobsCheckScriptTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsCheckScriptTest.o `test -f 'test/KvalobsCheckScriptTest.cpp' || echo '$(srcdir)/'`test/KvalobsCheckScriptTest.cpp

qabasetest-KvalobsCheckScriptTest.obj: test/KvalobsCheckScriptTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-KvalobsCheckScriptTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Tpo -c -o qabasetest-KvalobsCheckScriptTest.obj `if test -f 'test/KvalobsCheckScriptTest.cpp'; then $(CYGPATH_W) 'test/KvalobsCheckScriptTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/KvalobsCheckScriptTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Tpo $(DEPDIR)/qabasetest-KvalobsCheckScriptTest.Po
#	source='test/KvalobsCheckScriptTest.cpp' object='qabasetest-KvalobsCheckScriptTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-KvalobsCheckScriptTest.obj `if test -f 'test/KvalobsCheckScriptTest.cpp'; then $(CYGPATH_W) 'test/KvalobsCheckScriptTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/KvalobsCheckScriptTest.cpp'; fi`

qabasetest-test.o: test/test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-test.o -MD -MP -MF $(DEPDIR)/qabasetest-test.Tpo -c -o qabasetest-test.o `test -f 'test/test.cpp' || echo '$(srcdir)/'`test/test.cpp
	$(am__mv) $(DEPDIR)/qabasetest-test.Tpo $(DEPDIR)/qabasetest-test.Po
#	source='test/test.cpp' object='qabasetest-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-test.o `test -f 'test/test.cpp' || echo '$(srcdir)/'`test/test.cpp

qabasetest-test.obj: test/test.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-test.obj -MD -MP -MF $(DEPDIR)/qabasetest-test.Tpo -c -o qabasetest-test.obj `if test -f 'test/test.cpp'; then $(CYGPATH_W) 'test/test.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-test.Tpo $(DEPDIR)/qabasetest-test.Po
#	source='test/test.cpp' object='qabasetest-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-test.obj `if test -f 'test/test.cpp'; then $(CYGPATH_W) 'test/test.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test.cpp'; fi`

qabasetest-DataRequirementTest.o: test/DataRequirementTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataRequirementTest.o -MD -MP -MF $(DEPDIR)/qabasetest-DataRequirementTest.Tpo -c -o qabasetest-DataRequirementTest.o `test -f 'test/DataRequirementTest.cpp' || echo '$(srcdir)/'`test/DataRequirementTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DataRequirementTest.Tpo $(DEPDIR)/qabasetest-DataRequirementTest.Po
#	source='test/DataRequirementTest.cpp' object='qabasetest-DataRequirementTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataRequirementTest.o `test -f 'test/DataRequirementTest.cpp' || echo '$(srcdir)/'`test/DataRequirementTest.cpp

qabasetest-DataRequirementTest.obj: test/DataRequirementTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataRequirementTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-DataRequirementTest.Tpo -c -o qabasetest-DataRequirementTest.obj `if test -f 'test/DataRequirementTest.cpp'; then $(CYGPATH_W) 'test/DataRequirementTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DataRequirementTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DataRequirementTest.Tpo $(DEPDIR)/qabasetest-DataRequirementTest.Po
#	source='test/DataRequirementTest.cpp' object='qabasetest-DataRequirementTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataRequirementTest.obj `if test -f 'test/DataRequirementTest.cpp'; then $(CYGPATH_W) 'test/DataRequirementTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DataRequirementTest.cpp'; fi`

qabasetest-CheckRunnerTest.o: test/CheckRunnerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckRunnerTest.o -MD -MP -MF $(DEPDIR)/qabasetest-CheckRunnerTest.Tpo -c -o qabasetest-CheckRunnerTest.o `test -f 'test/CheckRunnerTest.cpp' || echo '$(srcdir)/'`test/CheckRunnerTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-CheckRunnerTest.Tpo $(DEPDIR)/qabasetest-CheckRunnerTest.Po
#	source='test/CheckRunnerTest.cpp' object='qabasetest-CheckRunnerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckRunnerTest.o `test -f 'test/CheckRunnerTest.cpp' || echo '$(srcdir)/'`test/CheckRunnerTest.cpp

qabasetest-CheckRunnerTest.obj: test/CheckRunnerTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckRunnerTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-CheckRunnerTest.Tpo -c -o qabasetest-CheckRunnerTest.obj `if test -f 'test/CheckRunnerTest.cpp'; then $(CYGPATH_W) 'test/CheckRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/CheckRunnerTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-CheckRunnerTest.Tpo $(DEPDIR)/qabasetest-CheckRunnerTest.Po
#	source='test/CheckRunnerTest.cpp' object='qabasetest-CheckRunnerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckRunnerTest.obj `if test -f 'test/CheckRunnerTest.cpp'; then $(CYGPATH_W) 'test/CheckRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/CheckRunnerTest.cpp'; fi`

qabasetest-FakeDatabaseAccess.o: test/FakeDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-FakeDatabaseAccess.o -MD -MP -MF $(DEPDIR)/qabasetest-FakeDatabaseAccess.Tpo -c -o qabasetest-FakeDatabaseAccess.o `test -f 'test/FakeDatabaseAccess.cpp' || echo '$(srcdir)/'`test/FakeDatabaseAccess.cpp
	$(am__mv) $(DEPDIR)/qabasetest-FakeDatabaseAccess.Tpo $(DEPDIR)/qabasetest-FakeDatabaseAccess.Po
#	source='test/FakeDatabaseAccess.cpp' object='qabasetest-FakeDatabaseAccess.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-FakeDatabaseAccess.o `test -f 'test/FakeDatabaseAccess.cpp' || echo '$(srcdir)/'`test/FakeDatabaseAccess.cpp

qabasetest-FakeDatabaseAccess.obj: test/FakeDatabaseAccess.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-FakeDatabaseAccess.obj -MD -MP -MF $(DEPDIR)/qabasetest-FakeDatabaseAccess.Tpo -c -o qabasetest-FakeDatabaseAccess.obj `if test -f 'test/FakeDatabaseAccess.cpp'; then $(CYGPATH_W) 'test/FakeDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/test/FakeDatabaseAccess.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-FakeDatabaseAccess.Tpo $(DEPDIR)/qabasetest-FakeDatabaseAccess.Po
#	source='test/FakeDatabaseAccess.cpp' object='qabasetest-FakeDatabaseAccess.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-FakeDatabaseAccess.obj `if test -f 'test/FakeDatabaseAccess.cpp'; then $(CYGPATH_W) 'test/FakeDatabaseAccess.cpp'; else $(CYGPATH_W) '$(srcdir)/test/FakeDatabaseAccess.cpp'; fi`

qabasetest-CheckSignatureTest.o: test/CheckSignatureTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckSignatureTest.o -MD -MP -MF $(DEPDIR)/qabasetest-CheckSignatureTest.Tpo -c -o qabasetest-CheckSignatureTest.o `test -f 'test/CheckSignatureTest.cpp' || echo '$(srcdir)/'`test/CheckSignatureTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-CheckSignatureTest.Tpo $(DEPDIR)/qabasetest-CheckSignatureTest.Po
#	source='test/CheckSignatureTest.cpp' object='qabasetest-CheckSignatureTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckSignatureTest.o `test -f 'test/CheckSignatureTest.cpp' || echo '$(srcdir)/'`test/CheckSignatureTest.cpp

qabasetest-CheckSignatureTest.obj: test/CheckSignatureTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-CheckSignatureTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-CheckSignatureTest.Tpo -c -o qabasetest-CheckSignatureTest.obj `if test -f 'test/CheckSignatureTest.cpp'; then $(CYGPATH_W) 'test/CheckSignatureTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/CheckSignatureTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-CheckSignatureTest.Tpo $(DEPDIR)/qabasetest-CheckSignatureTest.Po
#	source='test/CheckSignatureTest.cpp' object='qabasetest-CheckSignatureTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-CheckSignatureTest.obj `if test -f 'test/CheckSignatureTest.cpp'; then $(CYGPATH_W) 'test/CheckSignatureTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/CheckSignatureTest.cpp'; fi`

qabasetest-DataStoreTest.o: test/DataStoreTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataStoreTest.o -MD -MP -MF $(DEPDIR)/qabasetest-DataStoreTest.Tpo -c -o qabasetest-DataStoreTest.o `test -f 'test/DataStoreTest.cpp' || echo '$(srcdir)/'`test/DataStoreTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-DataStoreTest.Tpo $(DEPDIR)/qabasetest-DataStoreTest.Po
#	source='test/DataStoreTest.cpp' object='qabasetest-DataStoreTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataStoreTest.o `test -f 'test/DataStoreTest.cpp' || echo '$(srcdir)/'`test/DataStoreTest.cpp

qabasetest-DataStoreTest.obj: test/DataStoreTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-DataStoreTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-DataStoreTest.Tpo -c -o qabasetest-DataStoreTest.obj `if test -f 'test/DataStoreTest.cpp'; then $(CYGPATH_W) 'test/DataStoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DataStoreTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-DataStoreTest.Tpo $(DEPDIR)/qabasetest-DataStoreTest.Po
#	source='test/DataStoreTest.cpp' object='qabasetest-DataStoreTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-DataStoreTest.obj `if test -f 'test/DataStoreTest.cpp'; then $(CYGPATH_W) 'test/DataStoreTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DataStoreTest.cpp'; fi`

qabasetest-kvCronStringTest.o: test/kvCronStringTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvCronStringTest.o -MD -MP -MF $(DEPDIR)/qabasetest-kvCronStringTest.Tpo -c -o qabasetest-kvCronStringTest.o `test -f 'test/kvCronStringTest.cpp' || echo '$(srcdir)/'`test/kvCronStringTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-kvCronStringTest.Tpo $(DEPDIR)/qabasetest-kvCronStringTest.Po
#	source='test/kvCronStringTest.cpp' object='qabasetest-kvCronStringTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvCronStringTest.o `test -f 'test/kvCronStringTest.cpp' || echo '$(srcdir)/'`test/kvCronStringTest.cpp

qabasetest-kvCronStringTest.obj: test/kvCronStringTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-kvCronStringTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-kvCronStringTest.Tpo -c -o qabasetest-kvCronStringTest.obj `if test -f 'test/kvCronStringTest.cpp'; then $(CYGPATH_W) 'test/kvCronStringTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/kvCronStringTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-kvCronStringTest.Tpo $(DEPDIR)/qabasetest-kvCronStringTest.Po
#	source='test/kvCronStringTest.cpp' object='qabasetest-kvCronStringTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-kvCronStringTest.obj `if test -f 'test/kvCronStringTest.cpp'; then $(CYGPATH_W) 'test/kvCronStringTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/kvCronStringTest.cpp'; fi`

qabasetest-databaseResultFilterTest.o: test/databaseResultFilterTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-databaseResultFilterTest.o -MD -MP -MF $(DEPDIR)/qabasetest-databaseResultFilterTest.Tpo -c -o qabasetest-databaseResultFilterTest.o `test -f 'test/databaseResultFilterTest.cpp' || echo '$(srcdir)/'`test/databaseResultFilterTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-databaseResultFilterTest.Tpo $(DEPDIR)/qabasetest-databaseResultFilterTest.Po
#	source='test/databaseResultFilterTest.cpp' object='qabasetest-databaseResultFilterTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-databaseResultFilterTest.o `test -f 'test/databaseResultFilterTest.cpp' || echo '$(srcdir)/'`test/databaseResultFilterTest.cpp

qabasetest-databaseResultFilterTest.obj: test/databaseResultFilterTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-databaseResultFilterTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-databaseResultFilterTest.Tpo -c -o qabasetest-databaseResultFilterTest.obj `if test -f 'test/databaseResultFilterTest.cpp'; then $(CYGPATH_W) 'test/databaseResultFilterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/databaseResultFilterTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-databaseResultFilterTest.Tpo $(DEPDIR)/qabasetest-databaseResultFilterTest.Po
#	source='test/databaseResultFilterTest.cpp' object='qabasetest-databaseResultFilterTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-databaseResultFilterTest.obj `if test -f 'test/databaseResultFilterTest.cpp'; then $(CYGPATH_W) 'test/databaseResultFilterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/databaseResultFilterTest.cpp'; fi`

qabasetest-populateScriptTest.o: test/populateScriptTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-populateScriptTest.o -MD -MP -MF $(DEPDIR)/qabasetest-populateScriptTest.Tpo -c -o qabasetest-populateScriptTest.o `test -f 'test/populateScriptTest.cpp' || echo '$(srcdir)/'`test/populateScriptTest.cpp
	$(am__mv) $(DEPDIR)/qabasetest-populateScriptTest.Tpo $(DEPDIR)/qabasetest-populateScriptTest.Po
#	source='test/populateScriptTest.cpp' object='qabasetest-populateScriptTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-populateScriptTest.o `test -f 'test/populateScriptTest.cpp' || echo '$(srcdir)/'`test/populateScriptTest.cpp

qabasetest-populateScriptTest.obj: test/populateScriptTest.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qabasetest-populateScriptTest.obj -MD -MP -MF $(DEPDIR)/qabasetest-populateScriptTest.Tpo -c -o qabasetest-populateScriptTest.obj `if test -f 'test/populateScriptTest.cpp'; then $(CYGPATH_W) 'test/populateScriptTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/populateScriptTest.cpp'; fi`
	$(am__mv) $(DEPDIR)/qabasetest-populateScriptTest.Tpo $(DEPDIR)/qabasetest-populateScriptTest.Po
#	source='test/populateScriptTest.cpp' object='qabasetest-populateScriptTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(qabasetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qabasetest-populateScriptTest.obj `if test -f 'test/populateScriptTest.cpp'; then $(CYGPATH_W) 'test/populateScriptTest.cpp'; else $(CYGPATH_W) '$(srcdir)/test/populateScriptTest.cpp'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dist_binSCRIPTS install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS


#qabasetest_SOURCES += \
#	test/test.cpp \
#	test/FakeDatabaseAccess.h \
#	test/FakeDatabaseAccess.cpp \
#	test/MockDatabaseAccess.h \
#	test/KvalobsCheckScriptTest.cpp \
#	test/CheckRunnerTest.cpp \
#	test/ScriptResultIdentifierTest.cpp \
#	test/DataStoreTest.cpp \
#	test/DataRequirementTest.cpp \
#	test/CheckSignatureTest.cpp \
#	test/kvCronStringTest.cpp \
#	test/databaseResultFilterTest.cpp \
#	test/populateScriptTest.cpp \
#	test/DelayedSaveDatabaseAccessTest.cpp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
