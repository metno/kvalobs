primary_host=""
ipalias=""

#INPUT variable that can be defined 
#logfile - A file to log to. /dev/null if not defined.
#SILENT - (true|false) Write to the terminal if false.
#DOLOG - (true|false) Write to the logfile if true. 

if [ -z "$DOLOG" ]; then
   DOLOG=true
fi

if [ x"$KVCONFIG" = "x" ]; then
    KVCONFIG=__KVCONFIG__
fi

if [ x"$KVCONF" = "x" ]; then
    KVCONF=`$KVCONFIG --sysconfdir`/kvalobs
fi


if [ -f "/etc/kvalobs/kv-ipalias.conf" ]; then
    . /etc/kvalobs/kv-ipalias.conf
    mylog=/dev/null
    [ x"$logfile" = "x" ] || mylog=$logfile
    echo "Reading '/etc/kvalobs/kv-ipalias.conf'!" | tee -a $mylog
fi

#echo "PRIMARY_HOSTS: $PRIMARY_HOSTS"
#echo "IPALIAS_CHOICES: $IPALIAS_CHOICES"


[ x"$PRIMARY_HOSTS" = "x" ] || primary_host="$PRIMARY_HOSTS" 

if [ x"$IPALIAS_CHOICES" != "x" ]; then
    for myalias in $IPALIAS_CHOICES; do
#	echo "myalias: $myalias"
        if [ -x "$myalias" ]; then
            ipalias=$myalias
            break
        fi
    done
fi

log()
{
   local mylog; local log
   local runTime; local size
   mylog=""
   runTime=$(date +'%Y-%m-%d %H:%M:%S')
   
   log=true
   if [ "$DOLOG" = false ]; then 
      log=false
   fi

   if [ $# -gt 1 ]; then
      log=$2
   fi

   if [ -z "$SILENT" ]; then
      SILENT=true
   fi   
   
   if [ "$SILENT" = "false" ]; then
      echo $1
   fi

    if [ -z "$logfile" ]; then
        mylog="/dev/null"
    else
        mylog=$logfile
    fi
            
   if [ -f $mylog ]; then
      size=$(stat -c '%s' $mylog)
   
      if [ $size -gt 10240 ]; then
         mv $mylog $mylog.tmp
         tail -n 10 $mylog.tmp > $mylog
         newSize=$(stat -c '%s' $mylog)
         runTime=$(date +'%Y-%m-%d %H:%M:%S')
         echo "$runTime - Logfile truncated - size before truncate $size new size $newSize." >> $mylog
         rm -f $mylog.tmp
      fi
   fi

   if [ "$log" = true ]; then
      echo "$runTime - $1" >> $mylog
   else
      #At least touch the logfile so it shows some sign of that the program is alive.
      touch $mylog
   fi
}

logerror()
{  
   log "$@" true
}

loginfo()
{  
   log "$@" true
}


if [ -z "$ipalias" ]; then
    log "ipalias: NOT defined, this is ok if this instance of kvalobs do not use ip-alias." 
else
    log "ipalias: $ipalias"
fi


ipalias_status()
{
    local me=`uname -n`
    local res=0

    if [ -z "$ipalias" ]; then
        if [ "$SILENT" != true ]; then
           log "$me, is a test machine (?)."
        fi
        echo "test"
        return 0
    fi

    $ipalias status > /dev/null 2>&1 || res=$?

    if [ "$res" = "2" ]; then
		log "This machine has the kvalobs ip alias."
		echo "true" 
		return 0
    elif [ "$res" = "1" ]; then
		log "Another machine has the kvalobs ip alias."
		echo "false"
		return 1
    elif [ "$res" = "0" ]; then
        log "No machine has the kvalobs ip alias."
        echo "false"
        return 1
    else
		logerror "FAILED - kvalobs ipalias status." 
		echo "undefined"
		return 2
    fi
}

isProgRunning()
{
    local PID; local running 
    local piddir; local nodename 
    local pidfile; local pid
    
    running="" 
    piddir=`$KVCONFIG --rundir`
    nodename=`uname -n`
    pidfile=$piddir/$1-$nodename.pid
    prog=$1
   
    #echo "pidfile: $pidfile"
    
    if [ -f "$pidfile" ]; then 
      PID=`cat $pidfile`
      #echo "PID: $prog: $PID"
      kill  -0 $PID > /dev/null 2>&1

      if [ $? -eq 0 ]; then
         PIDS=`pgrep $prog 2>/dev/null`
         running=`echo $PIDS | grep $PID`
       
         if [ ! -z "$running" ]; then
            return 0
         else
            rm -f $pidfile
         fi 
        fi
   fi
    
   return 1
}
