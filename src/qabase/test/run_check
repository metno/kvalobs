#!/bin/sh

#set -ax

BLUE="[0;34m"
RED="[0;31m"
NORM="[0;0;0m"

function yes_no()
{
    echo -n "[j/n] : "
    stty raw         # Get one Character 
    readchar=`dd if=/dev/tty bs=1 count=1 2>/dev/null`
    stty -raw
    echo

    if [ $readchar != 'j' -a $readchar != 'J' ]; then
         return 0        
    fi
    return 1
}

htmltop=/disk1/kvalobs
#htmltop=/home/borge/projects/kvalobs/runtime/test
oprhtml=qabase-log
tsthtml=tst-log
refhtml=ref-log
bindir=$KVALOBS/bin
testdir=$KVALOBS/test
# logdir=$KVALOBS/var/log
htmldir=$htmltop/$oprhtml
#sqlfile=$testdir/sql_file
# diffile=$htmltop/html_diff
#timefile=$testdir/time_file

if [ -f $KVALOBS/.kvpasswd ]; then
   PGPASSWORD=`grep dbpass $KVALOBS/.kvpasswd | sed -e 's/ *dbpass *//'`
   export  PGPASSWORD
fi

function use()
{
   echo "$BLUE bruk "
   echo "       run_check [-h] [-n] [parameterfile]"
   echo "         -h Skriv ut denne hjelpeskjermen!  "
   echo "         -n nolog                            "
   echo " "
   echo "       default parameterfil er $testdir/run_check.dat"
   echo "$NORM " 
   echo " "
   echo " $BLUE Formatet til Parameterfilen: $NORM"
   echo "   Parameterfilen har tre parametere:"
   echo "     data_start:    starttidspunktet pï¿½ formen YYYY-MM-DD hh"
   echo "     data_stop:     stoptidspunktet pï¿½ formen  YYYY-MM-DD hh"
   echo "     data_typeid:   typeid til datasettet. Default 0"
   echo "     data_stations: En liste med stasjons nummer separert med mellomrom."
   echo " "
   echo "  Eks. "
   echo "     data_start=\"2004-12-20 06\""
   echo "     data_stop= \"2004-12-10 12\""
   echo "     data_stations=\"4780 17150 18700 27500\""
   echo " "
   echo "  Man kan ogsï¿½ sette data_stations=\"TEST\" da brukes alle stasjonen i "
   echo "  tidsrommet og med typeid=data_typeid!" 
   echo " "
   echo "  Legg merke til fnuttene (\") de Mï¿½ vï¿½re der!!!!"
   echo "  "
   echo " $BLUE Bruk: $NORM"
   echo "  - Velg fï¿½rst referanse-kjï¿½ring for ï¿½ kjï¿½re pï¿½ uendrede test-data."
   echo "  - Gjï¿½r endringer pï¿½ test-data - og kjï¿½r testene pï¿½ nytt "
   echo "    (svar nei for referanse-kjï¿½ring)."
   echo ""
   echo " $BLUE Resultatfiler: $NORM"
   echo "  Loggene ligger pï¿½ $htmltop/tst-log for normal kjï¿½ring"
   echo "                 pï¿½ $htmltop/ref-log for referanse-kjï¿½ring"
   echo ""
   echo "  Bruk f.eks konqueror $htmldir  for ï¿½ se pï¿½ detaljer"
   echo ""
   
}



HELP=
nolog=
UNKNOWN=

while [ -n "$(echo \"$1\" | grep '-')" ]; do
    case $1 in
    -h ) HELP=TRUE;;
    -n ) nolog=TRUE;;
    *  ) UNKNOWN=$1;;
    esac
    shift
done

if [  $HELP ]; then
    use
    exit 1
fi

if [ -n "$UNKNOWN" ]; then
    echo "$RED Ukjent option $UNKNOWN $NORM"
    echo ""
    use
    exit 1;
fi


conf_file=$1

if [ -z $conf_file ]; then

    if [ ! -f $testdir/run_check.dat ]; then
	echo " "
	echo "   Du mï¿½ angi en parameter file."
	echo
	echo "   Prï¿½vde ï¿½ bruke default parameter file:"
	echo "   $testdir/run_check.dat,"
	echo "   men den finnes ikke!"
	echo " "
	use
	exit 1
    fi

    echo
    echo "   Du har ikke angitt noen parameter file!"
    echo "   ï¿½nsker du ï¿½ bruke defaultfilen:"
    echo "   <$testdir/run_check.dat>"
    
    yes_no
    
    if [ $? -eq 0 ]; then
	use
	exit 1
    fi

    conf_file=$testdir/run_check.dat
fi

data_start=""
data_stop=""
data_stations=""
data_typeid="0"

echo
echo "Leser oppsett fra: $conf_file"
echo

source $conf_file

if [  -z "$data_start" -o -z "$data_start" -o -z "$data_stations" ]; then
  use  

  echo ""
  echo "Manglende parametere i filen: <$conf_file>"
  echo "Forventer at fï¿½lgende variabler er satt:"
  echo "     data_start: $data_start"
  echo "      data_stop: $data_stop"
  echo "  data_stations: $data_stations"
  echo ""
  
  exit 1
fi

echo "TEST-data"
echo " stations: $data_stations"  
echo "   typeid: $data_typeid"
echo "     from: $data_start"
echo "       to: $data_stop"



#
# Genererer en SQL fil fra opsettet i inputfilen
#
SQL_FILE=$KVALOBS/test/run_check_sql_file.sql
rm -f $SQL_FILE 

echo "--"                                                  > $SQL_FILE
echo "-- Oprettet: $(date)"                               >> $SQL_FILE
echo "-- Denne filen er automatisk generert av run_check" >> $SQL_FILE
echo "--"                                                 >> $SQL_FILE

for st in $data_stations ; do
    if [ "$st" = "TEST" ]; then 
       echo "\echo station: sletter $RED ALLE $NORM stasjoner fra $data_start til $data_stop">>$SQL_FILE
       echo "DELETE FROM data "                        >> $SQL_FILE
       echo "  WHERE typeid=$data_typeid          AND" >> $SQL_FILE
       echo "        obstime>='$data_start:00:00' AND" >>$SQL_FILE
       echo "        obstime<='$data_stop:00:00';"     >>$SQL_FILE
       echo "" >> $SQL_FILE
    else
       echo >> $SQL_FILE
       echo "\echo station: $st sletter fra $data_start til $data_stop">>$SQL_FILE
       echo "DELETE FROM data"                         >> $SQL_FILE
       echo "  WHERE typeid=$data_typeid          AND" >> $SQL_FILE
       echo "        obstime>='$data_start:00:00' AND" >>$SQL_FILE
       echo "        obstime<='$data_stop:00:00'  AND" >>$SQL_FILE
       echo "        stationid=$st;"                   >>$SQL_FILE
       echo " ">> $SQL_FILE
    fi
done

for st in $data_stations ; do
	if [ "$st" = "TEST" ]; then
		echo "\echo station: kopierer $RED ALLE $NORM stasjoner fra $data_start til $data_stop">>$SQL_FILE
		echo "INSERT INTO data SELECT * FROM test_data"          >> $SQL_FILE
   	echo "  WHERE typeid=$data_typeid          AND"          >> $SQL_FILE
		echo "        obstime>='$data_start:00:00' AND"          >> $SQL_FILE
		echo "        obstime<='$data_stop:00:00'; "             >> $SQL_FILE
		echo "UPDATE data SET useinfo='9999900000000000'"        >> $SQL_FILE
   	echo "  WHERE typeid=$data_typeid          AND"          >> $SQL_FILE
		echo "        obstime>='$data_start:00:00' AND"          >> $SQL_FILE
		echo "        obstime<='$data_stop:00:00'; "             >> $SQL_FILE
		echo "" >> $SQL_FILE
	else
		echo "\echo station: $st kopierer fra $data_start til $data_stop">>$SQL_FILE
		echo "INSERT INTO data SELECT * FROM test_data  "         >> $SQL_FILE
   	echo "  WHERE typeid=$data_typeid          AND"           >> $SQL_FILE
		echo "        obstime>='$data_start:00:00' AND"           >> $SQL_FILE
		echo "        obstime<='$data_stop:00:00'  AND"           >> $SQL_FILE 
		echo "        stationid=$st;"                             >> $SQL_FILE
		echo "UPDATE data SET useinfo='9999900000000000'  "       >> $SQL_FILE
   	echo "  WHERE typeid=$data_typeid          AND"           >> $SQL_FILE
		echo "        obstime>='$data_start:00:00' AND"           >> $SQL_FILE
		echo "        obstime<='$data_stop:00:00'  AND"           >> $SQL_FILE 
		echo "        stationid=$st;"                             >> $SQL_FILE
		echo                                                      >> $SQL_FILE
	fi
done


if [ ! -f $SQL_FILE ]; then
    echo "\n\nKan ikke opprette SQL skriptet: " 
    echo "  $SQL_FILE"
    echo 
    exit 1
fi

# What type of run

runtype="test"
echo -n "$RED Er dette en referanse-kjï¿½ring? "
yes_no
if [ $? -ne 0 ] ; then
  runtype="reference"
fi 
echo "$NORM"

if [ "$runtype" = "reference" ] 
then 
  if [ $nolog ] ; then
    htmldir="/dev/null"
  else
    htmldir=$htmltop/$refhtml
  fi
  echo " REFERANSE-kjï¿½ring: logger til $htmldir"

  echo -n "$RED Vil du legge inn originale test-data (tomme flaggverdier)? "
  yes_no
  run=$?
  echo "$NORM"
  if [ $run -ne 0 ] ; then
    echo " Kopierer test-data til data-tabellen"
    echo " Denne operasjonen vil ta tid ..."
    #.....
    #Bruker PGPORT, PGDATA og PGHOST for ï¿½ finne rett database
    psql -U kvalobs kvalobs -f $SQL_FILE
    if [ $? -ne 0 ] ; then
	echo "$RED kopiering av test-data feilet! Avslutter.. $NORM"
	exit 1
    fi
    echo " Kopiering ferdig .. Klar for kjï¿½ring.."
  fi

else
  if [ $nolog ] ; then
    htmldir="/dev/null"
  else
    htmldir=$htmltop/$tsthtml
  fi
  echo " Normal kjï¿½ring: logger til $htmldir"
fi

echo -n "$RED Start? "
yes_no
run=$?
echo "$NORM"
if [ $run -ne 0 ] ; then
  if [ $nolog ] ; then
    echo "no log"
  else
    # make new log-tree
    rm -rf $htmldir
    mkdir -p $htmldir
  fi
  
  mydata_stations=""
  for st in $data_stations ; do
      mydata_stations="$mydata_stations,$st"
  done

  
  # send list of stations and times to qabase
  if [ "$data_stations" = "TEST" ]; then
        $bindir/forceCheck -s TEST -a "$data_start:00:00" -o "$data_stop:00:00" -l "$htmldir" -i "$data_typeid"
  else
      $bindir/forceCheck -s "$mydata_stations" -a "$data_start:00:00" -o "$data_stop:00:00" -l "$htmldir" -i "$data_typeid"
  fi 

  if [ "$runtype" = "reference" ] 
  then 
    echo " REFERANSE-kjï¿½ring er ferdig."
  else
    echo " Normal kjï¿½ring er ferdig."
  fi

  echo "Loggene ligger: $htmldir"
fi 
