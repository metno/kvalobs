PROGRAM_NAME= kvQabased
TARGET= bin/$(PROGRAM_NAME)
TEST_PROGRAM_NAME= test$(PROGRAM_NAME)
TEST_TARGET= test/$(TEST_PROGRAM_NAME)

MAIN:=
SRC:=
TESTSRC:=
QSRC:=
UI:=

TOP= ../..

include $(TOP)/conf/make.$(OSTYPE)

INCLUDE:= $(BOOSTINCLUDE) \
	     -I$(TOP)/include \
	     -I$(PUTOOLS)/include -I$(PUTOOLS)/include/puTools \
	     -I$(TOP)/include/kvskel \
	     $(OMNIINCLUDE) $(PERLCCOPTS) \
	  `pkg-config --cflags cppunit`

LIB:=	-L$(TOP)/lib $(BOOSTLIB) $(OMNILIB) -L$(PUTOOLS)/lib \
		-lmilog -lkvalobs -lkvdb -lfileutil -lmiutil -ldl \
		-lmiconfparser -lcorbahelper -lboost_thread -lboost_filesystem -lcorba_skel -ldnmithread \
		-lomniORB4 -lomnithread -lomniDynamic4 -lpthread -lpuTools $(PERLLIBS)

CXXFLAGS+= -Wall
DEFINES+=
CXXLDFLAGS+=


include src/make.mk
include test/make.mk


# Qt:
UI_IMPL= $(UI:.ui=.cc)
UI_HEAD= $(UI:.ui=.h)
MOC_SRC= $(QSRC:.cc=.moc.cc) $(UI_IMPL:.cc=.moc.cc)

ALL_SRC= $(UI_IMPL) $(QSRC) $(MOC_SRC) $(SRC)
OBJ=  $(ALL_SRC:.cc=.o)

# Test:
TESTOBJ= $(TESTSRC:.cc=.o)
TESTLIB= `pkg-config --libs cppunit`

all:  test $(TARGET) install

PREFIX= $(TOP)

install: $(TARGET)
#	@echo "[1mMAKE INSTALL ...................[0m";        
	@mkdir -p $(PREFIX)/bin/
	@cp $(TARGET) $(PREFIX)/bin
#	@echo '[4;34m Install bin(s): ..... '$$BINS'[0;0m'	
#	@echo "[1mINSTALL FINISHED................[0m";

uninstall:
	rm -f $(PREFIX)/bin/$(TARGET)


.cc.o:
	$(CXX) $(CXXFLAGS) $(DEFINES) $(INCLUDE) -o $@ -c $<

%.h:	%.ui
	cd $(dir $@); uic $(notdir $<) -o $(notdir $@)

%.cc: %.ui %.h
	cd $(dir $@); uic -impl $(notdir $*.h) $(notdir $<) -o $(notdir $@)


%.moc.cc:	%.h
	moc -o $@ $<

$(TARGET): $(OBJ) $(MAIN:.cc=.o)
	@mkdir -p bin
	$(CXX) -o $@ -Wall $(CXXLDFLAGS) $(OBJ) $(MAIN:.cc=.o) $(LIB)

$(TEST_TARGET): $(OBJ) $(TESTOBJ)
	$(CXX) -o $@ -Wall $(CXXLDFLAGS) $(OBJ) $(TESTOBJ) $(LIB) $(TESTLIB)

$(LIB_NAME): $(OBJ)


test:  $(TEST_TARGET)
	@echo Running tests:; KVALOBS=$(TOP) ./$(TEST_TARGET) >> /dev/null


# Autogenerated dependencies:
%.d: %.cc $(UI_HEAD)
	@set -e; rm -f $@; \
	$(CXX) -MM -MQ $(basename $<).o $(CXXFLAGS) $(DEFINES) $(INCLUDE) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

DEPENDS_FILES= $(SRC:.cc=.d) $(MAIN:.cc=.d) $(QSRC:.cc=.d) $(UI_IMPL:.cc=.d) $(TESTSRC:.cc=.d) $(TESTMAIN:.cc=.d)

-include $(DEPENDS_FILES)

# Not allow qt tools to delete generated headers
KEEP_UI_HEADERS:        $(UI_HEAD)


pretty:
	rm -f core core.*
	find . -name '*~' -type f -exec rm -f  {} \;
	find . -name '*.d.*' -type f -exec rm -f  {} \;

clean: pretty
	rm -f $(OBJ) $(MAIN:.cc=.o) $(TESTOBJ) $(UI_HEAD) $(UI_IMPL) $(MOC_SRC) $(DEPENDS_FILES)

veryclean: clean
	rm -f $(TARGET) $(TEST_TARGET)
	rmdir bin/

.PHONY: all pretty clean test KEEP_UI_HEADERS
