# Include file containing the common 
# targets for the KVALOBS install system
# this is not ment to be runned directly, but
# to include into your install script....
# juergens@met.no 3/2004

# PARAMETERS ==================================================


# PRETTY PARAMETERS: 

BOLD="[1;31m"
PLAIN="[0m"

# RESET CONTROL PARAMETERS: 

FORCE=
HELP=
DEST=
TEST=
UNKNOWN=

# FUNCTIONS: ====================================================



# PARSE THE COMMANDLINE =========================================

while [ -n "$(echo $1 | grep '-')" ]; do
    case $1 in
    -force   ) FORCE=TRUE ;;
    -f       ) FORCE=TRUE ;;
    -help    ) HELP=TRUE;;
    -h       ) HELP=TRUE;;
    -dest    ) DEST=$2
		shift;;
    -d       ) DEST=$2
		shift;;
    -test    ) TEST=TRUE;;
    -t       ) TEST=TRUE;;
    *        ) UNKNOWN=$1
    esac
    shift
done


if [ $UNKNOWN ]; then
    echo $BOLD
    echo "UNKNOWN OPTION: $UNKNOWN" 	
    echo "skipping INSTALL at $PWD"
    echo $PLAIN
    exit;
fi


  

# PRINT HELP FOR THE COMMANDLINE ================================

if [ $HELP ]; then

    echo $BOLD
    echo "Script to install KVALOBS to the operational site"
  
    echo "Options:                                             "
    echo 
    echo " -f  -force$PLAIN      requests confirm for the install "
    echo $BOLD
    echo " -d  -dest$PLAIN       main destination directory (mandatory) "
    echo $BOLD
    echo " -t  -test$PLAIN       test / dry run only"
    echo $BOLD
    echo " -h  -help$PLAIN       shows this page"
    echo
    
    exit;
fi

if [ $DEST ]; then
    DESTDIR=$DEST/$DESTINATION
else
    echo $BOLD
    echo "NO INSTALL DESTINATION DEFINED..... skipping $PWD"
    echo $PLAIN
    exit;
fi

echo
echo "[7;31mRunning INSTALL at: [0;4;31m $PWD [0;0m"
echo "[7;34mDESTINATION: [0;4;34m $DESTDIR [0;0m"



# ASK FOR CONFIRM BEFORE INSTALLATION ============================


if [ -z "$FORCE" ]; then
    echo
    echo -n "[7;34mCONTINUE[0;5;34m ? [0;0m  $BOLD [y/n] : " $PLAIN
    
    stty raw         # Get one Character 
    readchar=`dd if=/dev/tty bs=1 count=1 2>/dev/null`
    stty -raw
    
    
    if [ $readchar != 'y' -a $readchar != 'Y' ]; then
	echo " [1;31m.............SKIPPING [0;0m"
	exit    
    fi
    echo
fi

# INSTALLING  ====================================================


ALL_INSTALL=TRUE

# INSTALLING A LIST OF DIRECTORIES ----------------


if [ "$DIRECTORIES" ]; then
    echo $BOLD"INSTALL DIRECTORIES: $DIRECTORIES"$PLAIN
    ALL_INSTALL=
fi


# INSTALLING A LIST OF FILES ----------------------


if [ "$FILES" ]; then
	echo $BOLD"INSTALL FILES: $FILES"$PLAIN

   if [ ! -d "$DESTDIR/$DIR"   ]; then
		echo -n $BOLD"TARGET DIR: $DESTDIR/$DIR does not exist!"$PLAIN 
	
		if [ ! $TEST ]; then
	    	mkdir -pv $DESTDIR/$DIR
		fi
		echo
	fi

   for FILE in $FILES; do
		if [ -z "$(echo $FILE | grep '~')" ] && [ $FILE != "./INSTALL" ]; then     
    		echo -n "testing... $BOLD$FILE$PLAIN. File   "
	
    		if [ -f "$FILE" ]; then
	    		if [ $TEST ]; then
	      		if [ ! -f  "$DESTDIR/$DIR/$FILE" ]; then
	        			echo " does not exist at target ........ $BOLDupdate needed $PLAIN"
	      		else
						if [ $DESTDIR/$DIR/$FILE -ot $FILE ]; then
		  					echo " is older than source file ....$BOLDupdate needed $PLAIN"
						else
		  					echo "  OK ...........  no update necessary"
						fi
              fi
	    		else
	      		cp -upv $FILE $DESTDIR/$DIR
	    		fi
			else
	 			echo "does not exist  at source .......... $BOLD skipping $PLAIN"
			fi
    	fi
	done
   ALL_INSTALL=
fi

# INSTALL ANYTHING IN THIS PART OF THE TREE --------

if [ $ALL_INSTALL ]; then
    echo $BOLD"INSTALL ALL"$PLAIN
    DIRECTORIES=`find . -type d` 
fi


if [ "$DIRECTORIES" ]; then
	for DIR in  $DIRECTORIES ; do
   	TOPDIR=$PWD	
    
    	if ! [ `echo  $DIR | grep [.]svn` ]; then
			echo "[0;31mCHECKING: $DESTDIR/$DIR[0;0m"
	
			if [ -d "$DIR" ]; then
	    		cd $DIR
	    		Files=`find . -maxdepth 1 -type f `
        	else
	    		#Check if $DIR is a symbolic link
	    		if [ -L $DIR ]; then
	      		#Ok, try to change to $DIR
	      		cd $DIR
	      		if [ $? -eq 0 ]; then
	         		Files=`find . -maxdepth 1 -type f `
              	fi
          	else
              Files=
	    		fi
			fi

			if [ ! -d "$DESTDIR/$DIR"   ]; then
	    		if [ $TEST ]; then
					echo $BOLD"TARGET DIR: $DESTDIR/$DIR does not exist!"$PLAIN 
	    		else
					mkdir -pv $DESTDIR/$DIR
	    		fi
			fi
	    
			for FILE in $Files; do
	    		if [ -z "$(echo $FILE | grep '~')" ] && [ $FILE != "./INSTALL" ]; then   	
					if [ $TEST ]; then
		    			echo -n "testing... $BOLD$FILE$PLAIN. File   "

		    			if [ ! -f  "$DESTDIR/$DIR/$FILE" ]; then
							echo "does not exist at target ........ $BOLD update needed $PLAIN"
		    			else
							if [ $DESTDIR/$DIR/$FILE -ot $FILE ]; then
			    				echo "is older than source file ....$BOLD update needed $PLAIN"
							else
			    				echo " ........... [1;35mOK[0;0m"
							fi
		    			fi
					else
		    			cp -upv $FILE $DESTDIR/$DIR
					fi
	    		fi
			done
	
			cd $TOPDIR
    	fi
	done
fi











