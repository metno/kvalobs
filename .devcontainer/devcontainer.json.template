{
	"name": "yrmap-backend",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../docker/devcontainer.dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": null
	},

	"containerEnv": {
		"PATH": "/home/vscode/.local/bin:/opt/conda/bin:/opt/conda/condabin:/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker",
		"ms-vscode.cmake-tools",
		"ms-vscode.cpptools",
		"maelvalais.autoconf",
		"ms-python.vscode-pylance",
		"ms-python.python",
		"zxh404.vscode-proto3",
		"visualstudioexptteam.vscodeintellicode",
		"redhat.vscode-yaml",
		"ms-azuretools.vscode-docker",
		"mads-hartmann.bash-ide-vscode",
		"yzhang.markdown-all-in-one",
		"bpruitt-goddard.mermaid-markdown-syntax-highl",
		"coolbear.systemd-unit-file",
		"golang.go",
		"dotjoshjohnson.xml"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	//"postCreateCommand": "python setup.py develop --user",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
